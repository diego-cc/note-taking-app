{"version":3,"sources":["Customisation/themes.js","Context/Context.js","components/Search/SearchNotes.js","components/Nav/SideNav.js","Customisation/fontFaces.js","components/Home/Home.js","components/View/NoteCard.js","components/Spinner/Spinner.js","components/Browse/BrowseNotes.js","Model/Type.js","Model/Note.js","components/Add/AddNoteForm.js","components/Add/AddNote.js","components/404/NotFound.js","Firebase/Firebase.js","Model/NoteManager.js","components/View/ViewNote.js","components/App/App.js","serviceWorker.js","index.js"],"names":["THEMES","Light","Dark","AppContext","React","createContext","theme","AppProvider","Provider","AppConsumer","Consumer","Option","Select","SearchNotes","noteManager","useContext","history","useHistory","useState","dataSource","setDataSource","style","width","onSelect","value","push","onSearch","searchText","trim","notes","filter","note","title","toLowerCase","includes","type","body","map","length","key","id","slice","placeholder","suffix","Sider","Layout","SubMenu","Menu","SideNav","collapsed","setCollapsed","collapsible","onCollapse","mode","inlineIndent","Item","to","popupClassName","textAlign","FONT_FACES","Muli","IndieFlower","Home","color","marginBottom","listStyleType","fontWeight","marginTop","confirm","Modal","Meta","Card","Panel","Collapse","Text","Typography","Paragraph","NoteCard","onEditNote","onDeleteNote","detailsActive","setDetailsActive","isEditing","setIsEditing","noteDetails","setNoteDetails","onEditingNote","detailName","onChangeDetails","detail","updatedNote","findNoteByID","onViewNoteDetails","showConfirmDelete","content","createdAt","onOk","Promise","resolve","reject","catch","console","log","onCancel","useEffect","loading","xs","span","md","offset","lg","activeKey","showArrow","header","actions","onClick","avatar","active","editable","onChange","onStart","editing","description","updatedAt","Spinner","indicator","fontSize","BrowseNotes","props","dismissDeletedNoteNotification","deletedNote","notification","open","message","onClose","duration","icon","sort","note1","note2","moment","diff","TYPES","Work","Personal","Todo","uuidv4","require","Note","tags","format","this","anotherNote","AddNote","state","confirmDirty","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","onAddNote","getFieldDecorator","formItemLayout","labelCol","sm","wrapperCol","tailFormItemLayout","onSubmit","label","hasFeedback","rules","required","TextArea","allowClear","initialValue","Object","index","htmlType","Component","contextType","AddNoteForm","Form","create","name","dismissAddedNoteNotification","addedNote","NotFound","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","enablePersistence","synchronizeTabs","then","error","db","NoteManager","noteID","findIndex","noteTitle","find","updateRemote","onSuccess","onError","collection","doc","set","noteToBeUpdated","findNoteIndexByID","update","delete","ViewNote","useParams","Content","Footer","Header","App","onFontFaceChange","setState","prevState","fontFace","onThemeChange","localStorage","setItem","JSON","stringify","setUpWindowSize","window","innerWidth","windowSize","callback","navigator","onLine","setTimeout","addNote","editNote","deleteNoteByID","openNetworkNotification","addEventListener","themeJSON","getItem","parse","get","snap","forEach","noteData","data","padding","backgroundColor","margin","checked","checkedChildren","unCheckedChildren","minHeight","path","exact","render","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3779f6e3.chunk.js","sourcesContent":["/**\r\n * themes.js\r\n */\r\n/**\r\n * \"Enum\" that provides options for themes\r\n * @type {{Light: 'light', Dark: 'dark'}}\r\n */\r\nexport const THEMES = {\r\n  Light: 'light',\r\n  Dark: 'dark'\r\n};\r\n","/**\r\n * Context.js\r\n */\r\nimport React from 'react';\r\nimport {THEMES} from \"../Customisation/themes\";\r\n\r\n/**\r\n * Context of this application\r\n * @type {React.Context<{theme: \"dark\" | \"light\"}>}\r\n */\r\nexport const AppContext = React.createContext({theme: THEMES.Light});\r\n\r\n/**\r\n * Makes AppContext available to all components of this application\r\n * @type {React.Provider<{theme: (\"dark\"|\"light\")}>}\r\n */\r\nexport const AppProvider = AppContext.Provider;\r\n\r\n/**\r\n * Allows AppContext to be consumed by all components\r\n * @type {React.Consumer<{theme: (\"dark\"|\"light\")}>}\r\n */\r\nexport const AppConsumer = AppContext.Consumer;\r\n","/**\r\n * SearchNotes.js\r\n */\r\nimport React, {useContext, useState} from \"react\";\r\nimport {AutoComplete, Icon, Input, Select} from \"antd\";\r\nimport {AppContext} from \"../../Context/Context\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {Option} = Select;\r\n\r\n/**\r\n * SearchNotes component - allows users to search for notes (rendered on the sidebar)\r\n * @returns {*}\r\n */\r\nexport const SearchNotes = () => {\r\n  const {noteManager} = useContext(AppContext);\r\n  const history = useHistory();\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const onSearch = searchText => {\r\n\tif (searchText.trim()) {\r\n\t  const {notes} = noteManager;\r\n\t  setDataSource(\r\n\t\t[...notes\r\n\t\t  .filter(note => (\r\n\t\t\tnote.title.trim().toLowerCase().includes(searchText.trim().toLowerCase()) ||\r\n\t\t\tnote.type.trim().toLowerCase().includes(searchText.trim().toLowerCase()) ||\r\n\t\t\tnote.body.trim().toLowerCase().includes(searchText.trim().toLowerCase())\r\n\t\t  ))\r\n\t\t  .map(note =>\r\n\t\t\tnote.title.length > 10 ?\r\n\t\t\t  <Option key={note.id}>{`${note.title.slice(0, 10)}...`}</Option> :\r\n\t\t\t  <Option key={note.id}>{note.title}</Option>\r\n\t\t  )]\r\n\t  )\r\n\t}\r\n  };\r\n\r\n  const onSelect = (value) => {\r\n\tif (value) {\r\n\t  history.push(`/browse/${value}`);\r\n\t}\r\n  };\r\n\r\n  return (\r\n\t<AutoComplete\r\n\t  dataSource={dataSource}\r\n\t  style={{width: '100%'}}\r\n\t  onSelect={onSelect}\r\n\t  onSearch={onSearch}\r\n\t  placeholder=\"Search notes...\"\r\n\t>\r\n\t  <Input suffix={<Icon title=\"Search for a note\" type=\"search\"/>}/>\r\n\t</AutoComplete>\r\n  )\r\n};\r\n\r\n","/**\r\n * SideNav.js\r\n */\r\nimport React, {useState} from 'react';\r\nimport {Icon, Layout, Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {SearchNotes} from \"../Search/SearchNotes\";\r\n\r\nconst {Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\n/**\r\n * SideNav component - the side bar of this application\r\n * @param {\"light\"|\"dark\"} theme\r\n * @returns {*}\r\n */\r\nexport const SideNav = ({theme}) => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  return (\r\n\t<Sider\r\n\t  theme={theme}\r\n\t  collapsible\r\n\t  collapsed={collapsed}\r\n\t  onCollapse={setCollapsed}\r\n\t>\r\n\t  <Menu\r\n\t\ttheme={theme}\r\n\t\tmode=\"inline\"\r\n\t\tinlineIndent={10}\r\n\t  >\r\n\t\t<Menu.Item key={0}>\r\n\t\t  <Link to=\"/\">\r\n\t\t\t<Icon type=\"home\"/>\r\n\t\t\t<span>Home</span>\r\n\t\t  </Link>\r\n\t\t</Menu.Item>\r\n\t\t<SubMenu\r\n\t\t  popupClassName=\"popup-notes\"\r\n\t\t  key={1}\r\n\t\t  title={\r\n\t\t\t<span>\r\n              <Icon type=\"database\"/>\r\n              <span>Manage notes</span>\r\n            </span>\r\n\t\t  }\r\n\t\t>\r\n\t\t  <Menu.Item\r\n\t\t\tkey={1.1}\r\n\t\t\tstyle={{textAlign: 'center'}}\r\n\t\t  >\r\n\t\t\t<SearchNotes/>\r\n\t\t  </Menu.Item>\r\n\t\t  <Menu.Item key={1.2} style={{textAlign: 'center'}}>\r\n\t\t\t<Link to=\"/browse\">\r\n\t\t\t  <Icon type=\"profile\"/>\r\n\t\t\t  Browse\r\n\t\t\t</Link>\r\n\t\t  </Menu.Item>\r\n\t\t  <Menu.Item key={1.3} style={{textAlign: 'center'}}>\r\n\t\t\t<Link to=\"/add\">\r\n\t\t\t  <Icon type=\"plus\"/>\r\n\t\t\t  Add\r\n\t\t\t</Link>\r\n\t\t  </Menu.Item>\r\n\t\t</SubMenu>\r\n\t  </Menu>\r\n\t</Sider>\r\n  );\r\n};\r\n","/**\r\n * fontFaces.js\r\n */\r\n/**\r\n * \"Enum\" that provides options for font faces\r\n * (NOT CURRENTLY IMPLEMENTED)\r\n * @type {{Muli: 'muli', IndieFlower: 'indie-flower'}}\r\n */\r\nexport const FONT_FACES = {\r\n  Muli: 'muli',\r\n  IndieFlower: 'indie-flower'\r\n};\r\n","/**\r\n * Home.js\r\n */\r\nimport React from 'react';\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AppConsumer} from \"../../Context/Context\";\r\nimport {Icon} from \"antd\";\r\n\r\n/**\r\n * Home component - It's rendered when the / route is accessed\r\n * @returns {*}\r\n */\r\nexport const Home = () => {\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme}) => (\r\n\t\t  <div\r\n\t\t\tstyle={{\r\n\t\t\t  color: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t  textAlign: 'center'\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginBottom: '4rem',\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Welcome\r\n\t\t\t</h2>\r\n\t\t\t<p>This application allows you to add, edit, delete, search and browse notes.</p>\r\n\t\t\t<p>Each note is presented as a card, where:</p>\r\n\t\t\t<ul style={{listStyleType: 'none', fontWeight: 'bold'}}>\r\n\t\t\t  <li>Clicking on the <span><Icon title=\"View note\"\r\n\t\t\t\t\t\t\t\t\t\t\t  type=\"info-circle\"/></span> icon\r\n\t\t\t\tallows you to view details of an individual note on a separate page.\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Edit\" type=\"edit\"/></span> icon\r\n\t\t\t\tallows you to edit the details of a note.\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Delete note\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  type=\"delete\"/></span> icon\r\n\t\t\t\tdeletes a note (you will be prompted to confirm it).\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Note text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  type=\"ellipsis\"/></span> icon\r\n\t\t\t\texpands a note's text.\r\n\t\t\t  </li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p>If you get disconnected whilst using this application, your changes will be kept when\r\n\t\t\t  you're online again.</p>\r\n\t\t\t<p style={{marginBottom: '5rem'}}>The switch toggle on the top right corner allows you\r\n\t\t\t  to toggle dark mode. Give it a\r\n\t\t\t  try!</p>\r\n\t\t\t<p>To get started, click on the chevron on the bottom left corner to navigate through\r\n\t\t\t  the\r\n\t\t\t  windows.\r\n\t\t\t</p>\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * NoteCard.js\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {Card, Col, Collapse, Icon, Modal, Row, Skeleton, Typography} from \"antd\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {confirm} = Modal;\r\nconst {Meta} = Card;\r\nconst {Panel} = Collapse;\r\nconst {Text, Paragraph} = Typography;\r\n\r\n/**\r\n * NoteCard component - renders a card containing details of a single note\r\n * @param {Note} note - The note to be rendered\r\n * @param {Function} onEditNote - calls the onEditNote handler on App.js\r\n * @param {Function} onDeleteNote - calls the onDeleteNote handler on App.js\r\n * @returns {*}\r\n */\r\nexport const NoteCard = ({note, onEditNote, onDeleteNote}) => {\r\n  const {noteManager} = useContext(AppContext);\r\n  const history = useHistory();\r\n\r\n  const [detailsActive, setDetailsActive] = useState(false);\r\n  const [isEditing, setIsEditing] = useState({\r\n\ttitle: false,\r\n\tbody: false,\r\n\ttype: false\r\n  });\r\n\r\n  const [noteDetails, setNoteDetails] = useState({\r\n\ttitle: '',\r\n\tbody: '',\r\n\ttype: ''\r\n  });\r\n\r\n  const onEditingNote = detailName => {\r\n\tsetIsEditing({\r\n\t  ...isEditing,\r\n\t  [detailName]: true\r\n\t});\r\n\r\n\tsetNoteDetails({\r\n\t  ...noteDetails,\r\n\t  [detailName]: note[detailName]\r\n\t});\r\n  };\r\n\r\n  const onChangeDetails = (detailName, detail) => {\r\n\tsetIsEditing({\r\n\t  ...isEditing,\r\n\t  [detailName]: false\r\n\t});\r\n\r\n\tif (note[detailName] !== detail) {\r\n\t  const updatedNote = {\r\n\t\t...note,\r\n\t\t[detailName]: detail\r\n\t  };\r\n\r\n\t  onEditNote(updatedNote, () => {\r\n\t\tconst {title, type, body} = noteManager.findNoteByID(note.id);\r\n\t\tsetNoteDetails({\r\n\t\t  title: title.length > 10 ? `${title.slice(0, 10)}...` : title,\r\n\t\t  type: type.length > 10 ? `${type.slice(0, 10)}...` : type,\r\n\t\t  body\r\n\t\t})\r\n\t  });\r\n\t} else {\r\n\t  setNoteDetails({\r\n\t\t...noteDetails,\r\n\t\t[detailName]: detail.length > 10 ? `${detail.slice(0, 10)}...` : detail\r\n\t  })\r\n\t}\r\n  };\r\n\r\n  const onViewNoteDetails = () => {\r\n\thistory.push(`/browse/${note.id}`);\r\n  };\r\n\r\n  function showConfirmDelete() {\r\n\tconfirm({\r\n\t  title: 'Are you sure that you want to delete this note?',\r\n\t  content: `${note.title} - ${note.type} (${note.createdAt})`,\r\n\t  onOk() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t  onDeleteNote(note.id, () => {\r\n\t\t\tresolve();\r\n\t\t  });\r\n\t\t})\r\n\t\t  .catch(() => console.log('Oops errors!'));\r\n\t  },\r\n\t  onCancel() {\r\n\t  },\r\n\t});\r\n  }\r\n\r\n  useEffect(() => {\r\n\tif (note) {\r\n\t  setNoteDetails({\r\n\t\ttitle: note.title.length > 10 ? `${note.title.slice(0, 10)}...` : note.title,\r\n\t\tbody: note.body,\r\n\t\ttype: note.type.length > 10 ? `${note.type.slice(0, 10)}...` : note.type\r\n\t  })\r\n\t}\r\n  }, [note]);\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading}) => (\r\n\t\t  <Row>\r\n\t\t\t<Col\r\n\t\t\t  xs={{\r\n\t\t\t\tspan: 24\r\n\t\t\t  }}\r\n\t\t\t  md={{\r\n\t\t\t\tspan: 12,\r\n\t\t\t\toffset: 6\r\n\t\t\t  }}\r\n\t\t\t  lg={{\r\n\t\t\t\tspan: 8,\r\n\t\t\t\toffset: 8\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  <Collapse\r\n\t\t\t\tstyle={{marginBottom: '5rem'}}\r\n\t\t\t\tactiveKey={detailsActive ? '1' : ''}\r\n\t\t\t  >\r\n\t\t\t\t<Panel\r\n\t\t\t\t  showArrow={false}\r\n\t\t\t\t  key=\"1\"\r\n\t\t\t\t  header={\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t  actions={[\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  type=\"info-circle\"\r\n\t\t\t\t\t\t  key=\"info\"\r\n\t\t\t\t\t\t  title=\"View note details\"\r\n\t\t\t\t\t\t  onClick={onViewNoteDetails}\r\n\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  onClick={showConfirmDelete}\r\n\t\t\t\t\t\t  type=\"delete\"\r\n\t\t\t\t\t\t  title=\"Delete\"\r\n\t\t\t\t\t\t  key=\"delete\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t,\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  type=\"ellipsis\"\r\n\t\t\t\t\t\t  key=\"ellipsis\"\r\n\t\t\t\t\t\t  title=\"Expand note text\"\r\n\t\t\t\t\t\t  onClick={() => setDetailsActive(!detailsActive)}/>\r\n\t\t\t\t\t  ]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  <Skeleton loading={loading} avatar active>\r\n\t\t\t\t\t\t<Meta\r\n\t\t\t\t\t\t  title={\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t  editable={{\r\n\t\t\t\t\t\t\t\tonChange: detail => onChangeDetails('title', detail),\r\n\t\t\t\t\t\t\t\tonStart: () => onEditingNote('title'),\r\n\t\t\t\t\t\t\t\tediting: isEditing.title\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t  {noteDetails.title}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t  description={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t  <Text\r\n\t\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\t  onChange: detail => onChangeDetails('type', detail),\r\n\t\t\t\t\t\t\t\t  onStart: () => onEditingNote('type'),\r\n\t\t\t\t\t\t\t\t  editing: isEditing.type\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t{noteDetails.type}\r\n\t\t\t\t\t\t\t  </Text>\r\n\t\t\t\t\t\t\t  <p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t  marginTop: '2rem'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\tCreated at: {note.createdAt}\r\n\t\t\t\t\t\t\t  </p>\r\n\t\t\t\t\t\t\t  {\r\n\t\t\t\t\t\t\t\tnote.updatedAt ?\r\n\t\t\t\t\t\t\t\t  <p>Last updated: {note.updatedAt}</p> :\r\n\t\t\t\t\t\t\t\t  ''\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t  </Skeleton>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t  }\r\n\t\t\t\t>\r\n\t\t\t\t  <Paragraph\r\n\t\t\t\t\teditable={{\r\n\t\t\t\t\t  onChange: detail => onChangeDetails('body', detail),\r\n\t\t\t\t\t  onStart: () => onEditingNote('body'),\r\n\t\t\t\t\t  editing: isEditing.body\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{textAlign: 'justify'}}\r\n\t\t\t\t  >\r\n\t\t\t\t\t{noteDetails.body}\r\n\t\t\t\t  </Paragraph>\r\n\t\t\t\t</Panel>\r\n\t\t\t  </Collapse>\r\n\t\t\t</Col>\r\n\t\t  </Row>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Spinner.js\r\n */\r\nimport React from 'react';\r\nimport {Icon, Spin} from \"antd\";\r\n\r\n/**\r\n * Spinner component - shows a loading spinner\r\n * @returns {*}\r\n */\r\nexport const Spinner = () => (\r\n  <div style={{textAlign: 'center', marginTop: '5rem'}}>\r\n\t<Spin indicator={\r\n\t  <Icon\r\n\t\ttype=\"loading\"\r\n\t\tstyle={{\r\n\t\t  fontSize: '10rem'\r\n\t\t}}\r\n\t  />\r\n\t}\r\n\t/>\r\n  </div>\r\n);\r\n","/**\r\n * BrowseNotes.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {NoteCard} from \"../View/NoteCard\";\r\nimport {Empty, Icon, notification} from \"antd\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * Props for BrowseNotes\r\n * @typedef {Object} BrowseNotesProps\r\n * @property {Function} onEditNote - calls the onEditNote handler from App.js\r\n * @property {Function} onDeleteNote - calls the onDeleteNote handler from App.js\r\n */\r\n/**\r\n *\r\n * @param {BrowseNotesProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const BrowseNotes = props => {\r\n  const {dismissDeletedNoteNotification} = useContext(AppContext);\r\n\r\n  const openDeletedNoteNotification = () => {\r\n\tnotification.open({\r\n\t  message: 'Notification',\r\n\t  description: 'Your note has been successfully deleted',\r\n\t  onClose: dismissDeletedNoteNotification,\r\n\t  duration: 3,\r\n\t  icon: <Icon type=\"check-circle\" style={{color: 'green'}}/>\r\n\t})\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, noteManager, loading, deletedNote}) => (\r\n\t\t  <div style={{textAlign: 'center'}}>\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\tmarginBottom: '5rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Browse notes\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  deletedNote ? openDeletedNoteNotification() : ''\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\tnoteManager.notes.length ?\r\n\t\t\t\t  noteManager\r\n\t\t\t\t\t.notes\r\n\t\t\t\t\t.sort((note1, note2) => {\r\n\t\t\t\t\t  if (note1.updatedAt && !note2.updatedAt) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t  } else if (!note1.updatedAt && note2.updatedAt) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t  } else if (note1.updatedAt && note2.updatedAt) {\r\n\t\t\t\t\t\treturn moment(note2.updatedAt, 'DD/MM/YYYY hh:mm:ss A').diff(moment(note1.updatedAt, 'DD/MM/YYYY hh:mm:ss A'))\r\n\t\t\t\t\t  } else {\r\n\t\t\t\t\t\treturn moment(note2.createdAt, 'DD/MM/YYYY hh:mm:ss A').diff(moment(note1.createdAt, 'DD/MM/YYYY hh:mm:ss A'))\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(note => (\r\n\t\t\t\t\t  <NoteCard\r\n\t\t\t\t\t\tonDeleteNote={props.onDeleteNote}\r\n\t\t\t\t\t\tonEditNote={props.onEditNote}\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t)) :\r\n\t\t\t\t  <Empty\r\n\t\t\t\t\tdescription={\r\n\t\t\t\t\t  <span\r\n\t\t\t\t\t\tstyle={theme === THEMES.Light ?\r\n\t\t\t\t\t\t  {color: 'rgba(0, 0, 0, .85)'} :\r\n\t\t\t\t\t\t  {color: 'rgba(255, 255, 255, .65)'}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tNo notes to show\r\n\t\t\t\t\t  </span>\r\n\t\t\t\t\t}\r\n\t\t\t\t  />\r\n\t\t\t}\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Type.js\r\n */\r\n/**\r\n * \"Enum\" that contains basic types of notes\r\n * @type {{Todo: \"To do\", Personal: \"Personal\", Work: \"Work\"}}\r\n */\r\nexport const TYPES = {\r\n  Work: 'Work',\r\n  Personal: 'Personal',\r\n  Todo: 'To do'\r\n};\r\n","/**\r\n * Note.js\r\n */\r\nimport {TYPES} from './Type';\r\nimport moment from \"moment\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n/**\r\n * Base model class for a Note\r\n * @class Note\r\n */\r\nexport class Note {\r\n  /**\r\n   * Constructor for Note\r\n   * @param {string} title - Title for the note\r\n   * @param {string} body - Text for the note\r\n   * @param {string} type - Type for the note (default: \"Personal\")\r\n   * @param {Array<string>} tags - Tags for the note (default: empty array, not currently\r\n   * implemented)\r\n   * @param {string} id - Unique ID for the note (default: randomly generated uuid/v4)\r\n   * @param {Date|string} createdAt - Date/time when the note was created (default: now)\r\n   * @param {Date|string} updatedAt - Date/time when the note was last updated (default: null)\r\n   */\r\n  constructor(title, body, type = TYPES.Personal, tags = [], id = uuidv4(), createdAt = moment(moment(), 'DD/MM/YYYY hh:mm:ss A').format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n\tthis.title = title;\r\n\tthis.body = body;\r\n\tthis.type = type;\r\n\tthis.tags = tags;\r\n\tthis.id = id;\r\n\tthis.createdAt = createdAt;\r\n\tthis.updatedAt = updatedAt;\r\n  }\r\n\r\n  /**\r\n   * Checks whether two notes have the same title, body and type\r\n   * @param {Note} anotherNote - note to be compared\r\n   * @returns {boolean}\r\n   */\r\n  hasSameContent(anotherNote) {\r\n\treturn (this.title === anotherNote.title) &&\r\n\t  (this.body === anotherNote.body) &&\r\n\t  (this.type === anotherNote.type);\r\n  }\r\n}\r\n","/**\r\n * AddNoteForm.js\r\n */\r\nimport React from 'react';\r\n\r\nimport {Button, Form, Icon, Input, Select, Tooltip,} from 'antd';\r\nimport {TYPES} from \"../../Model/Type\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Note} from \"../../Model/Note\";\r\n\r\nconst {Option} = Select;\r\n\r\n/**\r\n * This component contains the form that is shown when the /add route is accessed\r\n * It will be wrapped by AddNoteForm (it's a little quirk of Ant Design to make it work\r\n * as intended)\r\n */\r\nclass AddNote extends React.Component {\r\n  state = {\r\n\tconfirmDirty: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n\te.preventDefault();\r\n\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t  if (!err) {\r\n\t\tconst note = new Note(values.title, values.body, values.type);\r\n\t\tthis.props.onAddNote(note);\r\n\t  }\r\n\t});\r\n  };\r\n\r\n  render() {\r\n\tconst {getFieldDecorator} = this.props.form;\r\n\r\n\tconst formItemLayout = {\r\n\t  labelCol: {\r\n\t\txs: {span: 24},\r\n\t\tsm: {span: 4},\r\n\t\tmd: {span: 8}\r\n\t  },\r\n\t  wrapperCol: {\r\n\t\txs: {span: 24},\r\n\t\tsm: {span: 16},\r\n\t\tmd: {span: 8}\r\n\t  },\r\n\t};\r\n\tconst tailFormItemLayout = {\r\n\t  wrapperCol: {\r\n\t\txs: {\r\n\t\t  span: 24\r\n\t\t}\r\n\t  },\r\n\t};\r\n\r\n\treturn (\r\n\t  <AppConsumer>\r\n\t\t{({theme}) => (\r\n\t\t  <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tTitle\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t  hasFeedback\r\n\t\t\t>\r\n\t\t\t  {getFieldDecorator('title', {\r\n\t\t\t\trules: [\r\n\t\t\t\t  {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: 'Please enter a title',\r\n\t\t\t\t  },\r\n\t\t\t\t],\r\n\t\t\t  })(<Input/>)}\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tText\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t  hasFeedback\r\n\t\t\t>\r\n\t\t\t  {getFieldDecorator('body', {\r\n\t\t\t\trules: [\r\n\t\t\t\t  {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: 'Please enter some text for your note',\r\n\t\t\t\t  }\r\n\t\t\t\t],\r\n\t\t\t  })(<Input.TextArea allowClear={true}/>)}\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tType <span>\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t  title={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t  <p>Basic types are provided</p>\r\n\t\t\t\t\t\t  <p>You may change it later</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t  }>\r\n\t\t\t\t\t<Icon type=\"question-circle\"/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t  </span>\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t>\r\n\t\t\t  {\r\n\t\t\t\tgetFieldDecorator('Type', {\r\n\t\t\t\t  initialValue: TYPES.Personal\r\n\t\t\t\t})(\r\n\t\t\t\t  <Select>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  Object.values(TYPES).map((type, index) => (\r\n\t\t\t\t\t\t<Option key={index} value={type}>{type}</Option>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t}\r\n\t\t\t\t  </Select>\r\n\t\t\t\t)\r\n\t\t\t  }\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item {...tailFormItemLayout} style={{textAlign: 'center', marginTop: '5rem'}}>\r\n\t\t\t  <Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\tAdd note\r\n\t\t\t  </Button>\r\n\t\t\t</Form.Item>\r\n\t\t  </Form>\r\n\t\t)}\r\n\t  </AppConsumer>\r\n\t);\r\n  }\r\n}\r\n\r\nAddNote.contextType = AppContext;\r\nconst AddNoteForm = Form.create({name: 'addNote'})(AddNote);\r\n\r\nexport {AddNoteForm}\r\n","/**\r\n * AddNote.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {Icon, notification} from \"antd\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AddNoteForm} from \"./AddNoteForm\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\n\r\n/**\r\n * Props for AddNote\r\n * @typedef {Object} AddNoteProps\r\n * @property {Function} onAddNote - calls the onAddNote handler on App.js\r\n */\r\n/**\r\n * AddNote component - For the /add route\r\n * @param {AddNoteProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddNote = props => {\r\n  const {dismissAddedNoteNotification} = useContext(AppContext);\r\n\r\n  const openNoteAddedNotification = () => {\r\n\tnotification.open({\r\n\t  message: 'Notification',\r\n\t  description: 'Your note has been successfully added',\r\n\t  icon: <Icon type=\"check-circle\" style={{color: 'green'}}/>,\r\n\t  duration: 3,\r\n\t  onClose: dismissAddedNoteNotification\r\n\t})\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading, addedNote}) => (\r\n\t\t  <>\r\n\t\t\t{\r\n\t\t\t  addedNote ?\r\n\t\t\t\t(\r\n\t\t\t\t  openNoteAddedNotification()\r\n\t\t\t\t) : ''\r\n\t\t\t}\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\tcolor: theme === THEMES.Light ?\r\n\t\t\t\t\t`rgba(0, 0, 0, 0.65)` :\r\n\t\t\t\t\t`rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginBottom: '5rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Add a new note\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\t<AddNoteForm onAddNote={props.onAddNote}/>\r\n\t\t\t}\r\n\t\t  </>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * NoteFound.js\r\n */\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\n\r\n/**\r\n * NotFound component - To handle unknown routes\r\n * @returns {*}\r\n */\r\nexport const NotFound = () => (\r\n  <>\r\n\t<h2>Resource not found</h2>\r\n\t<Button type=\"link\">\r\n\t  <Link to={`/`}>Home</Link>\r\n\t</Button>\r\n  </>\r\n);\r\n","/**\r\n * Firebase.js\r\n */\r\nimport firebase from 'firebase';\r\n\r\n/**\r\n * Basic configuration object for firebase\r\n * @type {{storageBucket: string, apiKey: string, messagingSenderId: string, appId: string, projectId: string, databaseURL: string, authDomain: string}}\r\n */\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCu7aPj_hO5OGXcMWmDeOs9Mfav7IW2T0Q\",\r\n  authDomain: \"note-taking-app-9617e.firebaseapp.com\",\r\n  databaseURL: \"https://note-taking-app-9617e.firebaseio.com\",\r\n  projectId: \"note-taking-app-9617e\",\r\n  storageBucket: \"note-taking-app-9617e.appspot.com\",\r\n  messagingSenderId: \"476174101677\",\r\n  appId: \"1:476174101677:web:3de0d0b5b24d1d0e08ea24\"\r\n};\r\n\r\n/**\r\n * Initialise firebase with the provided configuration\r\n */\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// handle persistence issues here\r\nconst handleError = error => {\r\n  console.error(error);\r\n};\r\n\r\n/**\r\n * Enable persistence (for offline mode)\r\n */\r\nfirebase\r\n  .firestore()\r\n  .enablePersistence({synchronizeTabs: true})\r\n  .then(() => console.log(\r\n\t'%c✓ Persistence enabled',\r\n\t'font-weight: bolder; color: #4CAF50; font-size: 18px'\r\n  ))\r\n  .catch(err => {\r\n\thandleError(err);\r\n  });\r\n\r\n/**\r\n * Export database\r\n * @type {firebase.firestore.Firestore}\r\n */\r\nconst db = firebase.firestore();\r\nexport {db}\r\n\r\n","/**\r\n * NoteManager.js\r\n */\r\nimport moment from \"moment\";\r\nimport {db} from \"../Firebase/Firebase\";\r\n\r\n/**\r\n * Manages all notes present in the application\r\n * @class NoteManager\r\n */\r\nexport class NoteManager {\r\n  /**\r\n   * Constructor for NoteManager\r\n   * @param {Array<Note>} notes - All notes in the application (default: empty array)\r\n   */\r\n  constructor(notes = []) {\r\n\tthis.notes = notes;\r\n  }\r\n\r\n  /**\r\n   * Finds the index of a note in {@link notes} by its ID\r\n   * @param {string} noteID - The ID of the note to be searched\r\n   * @returns {number}\r\n   */\r\n  findNoteIndexByID(noteID) {\r\n\treturn this.notes.findIndex(note => note.id === noteID);\r\n  }\r\n\r\n  /**\r\n   * Finds all notes in {@link notes} whose title matches noteTitle\r\n   * @param {string} noteTitle - Title to be searched\r\n   * @returns {Note[]|[]}\r\n   */\r\n  findNotesByTitle(noteTitle) {\r\n\treturn this.notes.filter(note => note.title.trim().toLowerCase().includes(noteTitle.trim().toLowerCase()));\r\n  }\r\n\r\n  /**\r\n   * Finds a note in {@link notes} by its ID\r\n   * @param {string} noteID - The ID of the note to be searched\r\n   * @returns {Note|undefined}\r\n   */\r\n  findNoteByID(noteID) {\r\n\treturn this.notes.find(note => note.id === noteID);\r\n  }\r\n\r\n  /**\r\n   * Adds a note to {@link notes}\r\n   * @param {Note} note - note to be added\r\n   * @param {boolean} updateRemote - if true, also adds a note to the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully added to the remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to add a note to the\r\n   * remote database (default: null)\r\n   */\r\n  addNote(note, updateRemote = true, onSuccess = null, onError = null) {\r\n\tthis.notes.push(note);\r\n\r\n\tif (updateRemote) {\r\n\t  db\r\n\t\t.collection('notes')\r\n\t\t.doc(note.id)\r\n\t\t.set({...note})\r\n\t\t.then(onSuccess)\r\n\t\t.catch(err => onError(err))\r\n\t}\r\n  };\r\n\r\n  /**\r\n   * Edits a note in {@link notes}\r\n   * @param {Note} updatedNote - updated note, with the same ID of the original one\r\n   * @param {boolean} updateRemote - if true, also edits the note in the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully edited in the remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to edit the note\r\n   * in the remote database (default: null)\r\n   */\r\n  editNote(updatedNote, updateRemote = true, onSuccess = null, onError = null) {\r\n\tif (this.findNoteByID(updatedNote.id)) {\r\n\t  let noteToBeUpdated = this.findNoteByID(updatedNote.id);\r\n\t  noteToBeUpdated = updatedNote;\r\n\t  noteToBeUpdated.updatedAt = moment(moment(), 'DD/MM/YYYY hh:mm:ss A').format('DD/MM/YYYY hh:mm:ss A');\r\n\r\n\t  this.notes[this.findNoteIndexByID(updatedNote.id)] = noteToBeUpdated;\r\n\r\n\t  if (updateRemote) {\r\n\t\tdb\r\n\t\t  .collection('notes')\r\n\t\t  .doc(updatedNote.id)\r\n\t\t  .update({...updatedNote})\r\n\t\t  .then(onSuccess)\r\n\t\t  .catch(err => onError(err));\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * Deletes a note in {@link notes}\r\n   * @param {string} noteID - The ID of the note to be deleted\r\n   * @param {boolean} updateRemote - if true, also deletes the note from the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully deleted from the\r\n   * remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to delete the note\r\n   * from the remote database (default: null)\r\n   */\r\n  deleteNoteByID(noteID, updateRemote = true, onSuccess = null, onError = null) {\r\n\tif (this.findNoteByID(noteID)) {\r\n\t  this.notes = this.notes.filter(note => note.id !== noteID);\r\n\r\n\t  if (updateRemote) {\r\n\t\tdb\r\n\t\t  .collection('notes')\r\n\t\t  .doc(noteID)\r\n\t\t  .delete()\r\n\t\t  .then(onSuccess)\r\n\t\t  .catch(err => onError(err));\r\n\t  }\r\n\t}\r\n  }\r\n}\r\n","/**\r\n * ViewNote.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\nimport {NoteCard} from \"./NoteCard\";\r\nimport {Button, Empty} from \"antd\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\n/**\r\n * Props for ViewNote\r\n * @typedef {Object} ViewNoteProps\r\n * @property {Function} onEditNote - calls the onEditNote handler on App.js\r\n * @property {Function} onDeleteNote - calls the onDeleteNote handler on App.js\r\n */\r\n/**\r\n * ViewNote component - It's rendered when the /browse/:noteID route is accessed\r\n * @param {ViewNoteProps} props\r\n * @returns {*}\r\n */\r\nexport const ViewNote = props => {\r\n  const history = useHistory();\r\n  const {noteID} = useParams();\r\n  const {noteManager} = useContext(AppContext);\r\n  const note = noteManager.findNoteByID(noteID);\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading}) => (\r\n\t\t  <div style={{textAlign: 'center'}}>\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\tmarginBottom: '4rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  View note: {note ? note.title : ''}\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\tnote ?\r\n\t\t\t\t  <NoteCard\r\n\t\t\t\t\tonEditNote={props.onEditNote}\r\n\t\t\t\t\tonDeleteNote={props.onDeleteNote}\r\n\t\t\t\t\tnote={note}\r\n\t\t\t\t  /> :\r\n\t\t\t\t  <Empty\r\n\t\t\t\t\tdescription={\r\n\t\t\t\t\t  <span\r\n\t\t\t\t\t\tstyle={theme === THEMES.Light ?\r\n\t\t\t\t\t\t  {color: 'rgba(0, 0, 0, .85)'} :\r\n\t\t\t\t\t\t  {color: 'rgba(255, 255, 255, .65)'}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tNote not found\r\n\t\t\t\t\t  </span>\r\n\t\t\t\t\t}\r\n\t\t\t\t  />\r\n\t\t\t}\r\n\t\t\t<Button\r\n\t\t\t  style={{marginTop: '5rem'}}\r\n\t\t\t  type=\"primary\"\r\n\t\t\t  onClick={() => history.push(`/browse`)}\r\n\t\t\t>\r\n\t\t\t  Browse notes\r\n\t\t\t</Button>\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * App.js\r\n */\r\nimport React from 'react';\r\nimport {Col, Icon, Layout, notification, Row, Switch as ToggleSwitch} from 'antd';\r\nimport {SideNav} from \"../Nav/SideNav\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {FONT_FACES} from \"../../Customisation/fontFaces\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Home} from \"../Home/Home\";\r\nimport {BrowseNotes} from \"../Browse/BrowseNotes\";\r\nimport {AddNote} from \"../Add/AddNote\";\r\nimport {NotFound} from \"../404/NotFound\";\r\nimport {NoteManager} from \"../../Model/NoteManager\";\r\nimport {AppProvider} from \"../../Context/Context\";\r\nimport {db} from \"../../Firebase/Firebase\";\r\nimport {Note} from \"../../Model/Note\";\r\nimport {ViewNote} from \"../View/ViewNote\";\r\n\r\nconst {Content, Footer, Header} = Layout;\r\n\r\n/**\r\n * App component - manages the various routes of this application\r\n */\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t  noteManager: new NoteManager(),\r\n\t  fontFace: FONT_FACES.Muli,\r\n\t  theme: THEMES.Light,\r\n\t  windowSize: '',\r\n\t  loading: navigator.onLine,\r\n\t  addedNote: false,\r\n\t  deletedNote: false,\r\n\t  dismissAddedNoteNotification: this.dismissAddedNoteNotification,\r\n\t  dismissDeletedNoteNotification: this.dismissDeletedNoteNotification\r\n\t};\r\n\r\n\t/**\r\n\t * Dismisses the notification shown after a note is added\r\n\t * @param {Function|null} callback - Called after the notification is dismissed (default: null)\r\n\t */\r\n\tthis.dismissAddedNoteNotification = (callback = null) => {\r\n\t  this.setState({\r\n\t\taddedNote: false\r\n\t  }, callback)\r\n\t};\r\n\r\n\t/**\r\n\t * Dismisses the notification shown after a note is deleted\r\n\t * @param {Function|null} callback - Called after the notification is dismissed (default: null)\r\n\t */\r\n\tthis.dismissDeletedNoteNotification = (callback = null) => {\r\n\t  this.setState({\r\n\t\tdeletedNote: false\r\n\t  }, callback)\r\n\t};\r\n  }\r\n\r\n  /**\r\n   * Changes the font face of the application\r\n   * (NOT CURRENTLY IMPLEMENTED)\r\n   */\r\n  onFontFaceChange = () => {\r\n\tthis.setState(prevState => ({\r\n\t  fontFace: prevState.fontFace === FONT_FACES.Muli ? FONT_FACES.IndieFlower : FONT_FACES.Muli\r\n\t}))\r\n  };\r\n\r\n  /**\r\n   * Changes the theme of the application\r\n   */\r\n  onThemeChange = () => {\r\n\tthis.setState(prevState => ({\r\n\t  theme: prevState.theme === THEMES.Light ? THEMES.Dark : THEMES.Light\r\n\t}), () => {\r\n\t  // remember settings\r\n\t  localStorage.setItem('theme', JSON.stringify(this.state.theme));\r\n\t})\r\n  };\r\n\r\n  /**\r\n   * Detects the width of the window for styling purposes\r\n   * (This is a quick hack for inline styles, to override the styles injected by Ant Design)\r\n   */\r\n  setUpWindowSize = () => {\r\n\tif (window.innerWidth < 376) {\r\n\t  this.setState({\r\n\t\twindowSize: 'xxs'\r\n\t  })\r\n\t} else if (window.innerWidth < 576) {\r\n\t  this.setState({windowSize: 'xs'});\r\n\t} else {\r\n\t  this.setState({windowSize: ''})\r\n\t}\r\n  };\r\n\r\n  /**\r\n   * Adds a note (handled by {@link noteManager})\r\n   * @param {Note} note - note to be added\r\n   * @param {Function|null} callback - called after the note is added (default: null)\r\n   */\r\n  onAddNote = (note, callback = null) => {\r\n\tconst {noteManager} = this.state;\r\n\tthis.setState({\r\n\t  loading: true\r\n\t}, () => {\r\n\t  // if user if offline, stop loading after .5 sec\r\n\t  if (!navigator.onLine) {\r\n\t\tsetTimeout(() => {\r\n\t\t  this.setState({\r\n\t\t\tloading: false,\r\n\t\t\taddedNote: true\r\n\t\t  }, () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t  this.dismissAddedNoteNotification();\r\n\t\t\t}, 3000)\r\n\t\t  })\r\n\t\t}, 500);\r\n\t  }\r\n\t  noteManager.addNote(note, true, () => {\r\n\t\tthis.setState({\r\n\t\t  noteManager,\r\n\t\t  loading: false,\r\n\t\t  addedNote: true\r\n\t\t}, () => {\r\n\t\t  setTimeout(() => {\r\n\t\t\tthis.dismissAddedNoteNotification(callback);\r\n\t\t  }, 3000)\r\n\t\t})\r\n\t  }, err => {\r\n\t\tconsole.error(err);\r\n\t  })\r\n\t})\r\n  };\r\n\r\n  /**\r\n   * Edits a note (handled by {@link noteManager})\r\n   * @param {Note} updatedNote - note to be edited\r\n   * @param {Function|null} callback - called after the note is edited (default: null)\r\n   */\r\n  onEditNote = (updatedNote, callback = null) => {\r\n\tthis.setState(prevState => {\r\n\t  const {noteManager} = prevState;\r\n\t  noteManager.editNote(updatedNote);\r\n\r\n\t  return ({noteManager})\r\n\t}, callback)\r\n  };\r\n\r\n  onDeleteNote = (noteID, callback) => {\r\n\tthis.setState(prevState => {\r\n\t  const {noteManager} = prevState;\r\n\t  noteManager.deleteNoteByID(noteID);\r\n\r\n\t  return ({\r\n\t\tnoteManager,\r\n\t\tdeletedNote: true\r\n\t  })\r\n\t}, () => {\r\n\t  callback();\r\n\t  setTimeout(() => {\r\n\t\tthis.dismissDeletedNoteNotification();\r\n\t  }, 3000)\r\n\t})\r\n  };\r\n\r\n  componentDidMount() {\r\n\tif (!navigator.onLine) {\r\n\t  this.openNetworkNotification(\r\n\t\t'You seem to be offline',\r\n\t\t`Don't worry though, your changes will be synchronised when you go back online`\r\n\t  );\r\n\t}\r\n\r\n\twindow.addEventListener('offline', () => {\r\n\t  if (!navigator.onLine) {\r\n\t\tthis.openNetworkNotification(\r\n\t\t  'You seem to be offline',\r\n\t\t  `Don't worry though, your changes will be synchronised when you go back online`\r\n\t\t);\r\n\t  }\r\n\t});\r\n\r\n\twindow.addEventListener('online', () => {\r\n\t  if (navigator.onLine) {\r\n\t\tthis.openNetworkNotification(\r\n\t\t  'Back online! 🙂'\r\n\t\t)\r\n\t  }\r\n\t});\r\n\r\n\twindow.addEventListener('resize', this.setUpWindowSize);\r\n\twindow.addEventListener('orientationChange', this.setUpWindowSize);\r\n\tlet theme;\r\n\r\n\t// get user settings, if any has been saved\r\n\tconst themeJSON = localStorage.getItem('theme');\r\n\tif (themeJSON) {\r\n\t  theme = JSON.parse(themeJSON);\r\n\t  this.setState({theme})\r\n\t}\r\n\t// fetch notes from remote here\r\n\tdb\r\n\t  .collection('notes')\r\n\t  .get()\r\n\t  .then(snap => {\r\n\t\tthis.setState(prevState => {\r\n\t\t  const {noteManager} = prevState;\r\n\t\t  snap.forEach(doc => {\r\n\t\t\tconst noteData = doc.data();\r\n\t\t\tconst note = new Note(noteData.title, noteData.body, noteData.type, null, noteData.id, noteData.createdAt, noteData.updatedAt);\r\n\t\t\tnoteManager.addNote(note, false);\r\n\t\t  });\r\n\t\t  return ({\r\n\t\t\tnoteManager,\r\n\t\t\tloading: false\r\n\t\t  })\r\n\t\t})\r\n\t  })\r\n\t  .catch(err => {\r\n\t\tthis.setState({\r\n\t\t  loading: false\r\n\t\t})\r\n\t  })\r\n  }\r\n\r\n  /**\r\n   * Shows notifications related to network changes (online/offline)\r\n   * @param {string} message - Title of the notification\r\n   * @param {string} description - Body text of the notification\r\n   */\r\n  openNetworkNotification = (message, description) => {\r\n\tnotification.open({\r\n\t  message,\r\n\t  description\r\n\t})\r\n  };\r\n\r\n  render() {\r\n\treturn (\r\n\t  <AppProvider value={this.state}>\r\n\t\t<Layout>\r\n\t\t  <Header\r\n\t\t\tstyle={{\r\n\t\t\t  padding: 0,\r\n\t\t\t  backgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`\r\n\t\t\t}}>\r\n\t\t\t<Row>\r\n\t\t\t  <Col span={8} offset={8}>\r\n\t\t\t\t<h1\r\n\t\t\t\t  style={{\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tfontSize: '2.5rem',\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tcolor: this.state.theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`\r\n\t\t\t\t  }}>\r\n\t\t\t\t  Note taking app\r\n\t\t\t\t</h1>\r\n\t\t\t  </Col>\r\n\t\t\t  <Col\r\n\t\t\t\tsm={{\r\n\t\t\t\t  span: 2,\r\n\t\t\t\t  offset: 6\r\n\t\t\t\t}}\r\n\t\t\t\txs={{\r\n\t\t\t\t  span: 4,\r\n\t\t\t\t  offset: 4\r\n\t\t\t\t}}\r\n\t\t\t  >\r\n\t\t\t\t<ToggleSwitch\r\n\t\t\t\t  onChange={this.onThemeChange}\r\n\t\t\t\t  checked={this.state.theme === THEMES.Light}\r\n\t\t\t\t  checkedChildren={<Icon type=\"bulb\"/>}\r\n\t\t\t\t  unCheckedChildren={<Icon type=\"bulb\"/>}\r\n\t\t\t\t/>\r\n\t\t\t  </Col>\r\n\t\t\t</Row>\r\n\t\t  </Header>\r\n\t\t  <Layout style={{\r\n\t\t\tminHeight: '100vh',\r\n\t\t\tbackgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`\r\n\t\t  }}>\r\n\t\t\t<SideNav theme={this.state.theme}/>\r\n\t\t\t<Content style={{margin: '0 1rem'}}>\r\n\t\t\t  <div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t  padding: '2rem'\r\n\t\t\t\t}}\r\n\t\t\t  >\r\n\t\t\t\t<Switch>\r\n\t\t\t\t  <Route path=\"/\" exact\r\n\t\t\t\t\t\t render={props => <Home {...props} />}/>\r\n\t\t\t\t  <Route exact path=\"/browse\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <BrowseNotes\r\n\t\t\t\t\t\t\t onDeleteNote={this.onDeleteNote}\r\n\t\t\t\t\t\t\t onEditNote={this.onEditNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />}\r\n\t\t\t\t  />\r\n\r\n\t\t\t\t  <Route path=\"/browse/:noteID\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <ViewNote\r\n\t\t\t\t\t\t\t onEditNote={this.onEditNote}\r\n\t\t\t\t\t\t\t onDeleteNote={this.onDeleteNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />\r\n\t\t\t\t\t\t }\r\n\t\t\t\t  />\r\n\r\n\t\t\t\t  <Route path=\"/add\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <AddNote\r\n\t\t\t\t\t\t\t onAddNote={this.onAddNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />\r\n\t\t\t\t\t\t }\r\n\t\t\t\t  />\r\n\t\t\t\t  <Route path=\"*\" render={props => <NotFound {...props} />}/>\r\n\t\t\t\t</Switch>\r\n\t\t\t  </div>\r\n\t\t\t</Content>\r\n\t\t  </Layout>\r\n\r\n\t\t  <Footer\r\n\t\t\tstyle={{\r\n\t\t\t  textAlign: ((this.state.windowSize === 'xs') || (this.state.windowSize === 'xxs')) ? 'right' : 'center',\r\n\t\t\t  backgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`,\r\n\t\t\t  color: this.state.theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t  fontSize: '2rem'\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\tCopyright &copy; 2019 Diego C.\r\n\t\t  </Footer>\r\n\t\t</Layout>\r\n\t  </AppProvider>\r\n\t)\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * index.js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {App} from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\n\r\n/**\r\n * Entry point of the application, renders <App /> wrapped by BrowserRouter\r\n */\r\nReactDOM.render(\r\n  <Router>\r\n\t<App/>\r\n  </Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}