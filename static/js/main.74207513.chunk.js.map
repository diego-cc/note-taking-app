{"version":3,"sources":["Firebase/Firebase.prod.js","Customisation/themes.js","Context/Context.js","components/Search/SearchNotes.js","components/Nav/SideNav.js","Customisation/fontFaces.js","components/Home/Home.js","components/View/NoteCard.js","components/Spinner/Spinner.js","components/Browse/BrowseNotes.js","Model/Type.js","Model/Note.js","components/Add/AddNoteForm.js","Model/NoteManager.js","components/Add/AddNote.js","components/404/NotFound.js","components/App/App.js","components/View/ViewNote.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","enablePersistence","synchronizeTabs","then","console","log","catch","err","error","db","THEMES","Light","Dark","AppContext","React","createContext","theme","AppProvider","Provider","AppConsumer","Consumer","Option","Select","SearchNotes","noteManager","useContext","history","useHistory","useState","dataSource","setDataSource","searchInput","setSearchInput","filterNotes","notes","searchText","filter","note","title","trim","toLowerCase","includes","type","body","onSelect","value","option","key","push","backfill","style","width","onChange","onSearch","map","length","id","slice","placeholder","allowClear","suffix","onClick","filteredNotes","Sider","Layout","SubMenu","Menu","SideNav","collapsed","setCollapsed","siderRef","useRef","collapsible","onCollapse","e","current","mode","inlineIndent","Item","to","ref","popupClassName","textAlign","FONT_FACES","Muli","IndieFlower","Home","fontSize","color","marginBottom","listStyleType","fontWeight","marginTop","confirm","Modal","Meta","Card","Panel","Collapse","Text","Typography","Paragraph","NoteCard","onEditNote","onDeleteNote","detailsActive","setDetailsActive","isEditing","setIsEditing","noteDetails","setNoteDetails","onEditingNote","detailName","onChangeDetails","detail","updatedNote","findNoteByID","onViewNoteDetails","showConfirmDelete","content","createdAt","onOk","Promise","resolve","reject","onCancel","useEffect","loading","xs","span","md","offset","lg","activeKey","showArrow","header","actions","avatar","active","editable","onStart","editing","description","updatedAt","Spinner","indicator","BrowseNotes","props","dismissDeletedNoteNotification","deletedNote","notification","open","message","onClose","duration","icon","sort","note1","note2","moment","diff","TYPES","Work","Personal","Todo","uuidv4","require","Note","tags","format","this","anotherNote","AddNote","state","confirmDirty","handleSubmit","preventDefault","form","validateFieldsAndScroll","values","onAddNote","getFieldDecorator","formItemLayout","labelCol","sm","wrapperCol","tailFormItemLayout","onSubmit","label","hasFeedback","rules","required","TextArea","initialValue","Object","index","htmlType","Component","contextType","AddNoteForm","Form","create","name","dismissAddedNoteNotification","addedNote","NotFound","NoteManager","noteID","findIndex","noteTitle","find","updateRemote","onSuccess","onError","collection","doc","set","noteToBeUpdated","findNoteIndexByID","update","delete","ViewNote","useParams","Content","Footer","Header","App","onFontFaceChange","setState","prevState","fontFace","onThemeChange","localStorage","setItem","JSON","stringify","setUpWindowSize","window","innerWidth","windowSize","callback","navigator","onLine","setTimeout","addNote","editNote","deleteNoteByID","openNetworkNotification","addEventListener","themeJSON","getItem","parse","get","snap","forEach","noteData","data","padding","backgroundColor","margin","checked","checkedChildren","unCheckedChildren","minHeight","path","exact","render","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","basename","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.74207513.chunk.js","sourcesContent":["/**\r\n * Firebase.js\r\n */\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\n/**\r\n * Basic configuration object for firebase\r\n * @type {{storageBucket: string, apiKey: string, messagingSenderId: string, appId: string, projectId: string, databaseURL: string, authDomain: string}}\r\n */\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCu7aPj_hO5OGXcMWmDeOs9Mfav7IW2T0Q\",\r\n  authDomain: \"note-taking-app-9617e.firebaseapp.com\",\r\n  databaseURL: \"https://note-taking-app-9617e.firebaseio.com\",\r\n  projectId: \"note-taking-app-9617e\",\r\n  storageBucket: \"note-taking-app-9617e.appspot.com\",\r\n  messagingSenderId: \"476174101677\",\r\n  appId: \"1:476174101677:web:3de0d0b5b24d1d0e08ea24\"\r\n};\r\n\r\n/**\r\n * Initialise firebase with the provided configuration\r\n */\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// handle persistence issues here\r\nconst handleError = error => {\r\n  console.error(error);\r\n};\r\n\r\n/**\r\n * Enable persistence (for offline mode)\r\n */\r\nfirebase\r\n  .firestore()\r\n  .enablePersistence({synchronizeTabs: true})\r\n  .then(() => console.log(\r\n\t'%c✓ Persistence enabled',\r\n\t'font-weight: bolder; color: #4CAF50; font-size: 18px'\r\n  ))\r\n  .catch(err => {\r\n\thandleError(err);\r\n  });\r\n\r\n/**\r\n * Export database\r\n * @type {firebase.firestore.Firestore}\r\n */\r\nconst db = firebase.firestore();\r\nexport {db}\r\n","/**\r\n * themes.js\r\n */\r\n/**\r\n * \"Enum\" that provides options for themes\r\n * @type {{Light: 'light', Dark: 'dark'}}\r\n */\r\nexport const THEMES = {\r\n  Light: 'light',\r\n  Dark: 'dark'\r\n};\r\n","/**\r\n * Context.js\r\n */\r\nimport React from 'react';\r\nimport {THEMES} from \"../Customisation/themes\";\r\n\r\n/**\r\n * Context of this application\r\n * @type {React.Context<{theme: \"dark\" | \"light\"}>}\r\n */\r\nexport const AppContext = React.createContext({theme: THEMES.Light});\r\n\r\n/**\r\n * Makes AppContext available to all components of this application\r\n * @type {React.Provider<{theme: (\"dark\"|\"light\")}>}\r\n */\r\nexport const AppProvider = AppContext.Provider;\r\n\r\n/**\r\n * Allows AppContext to be consumed by all components\r\n * @type {React.Consumer<{theme: (\"dark\"|\"light\")}>}\r\n */\r\nexport const AppConsumer = AppContext.Consumer;\r\n","/**\r\n * SearchNotes.js\r\n */\r\nimport React, {useContext, useState} from \"react\";\r\nimport {AutoComplete, Icon, Input, Select} from \"antd\";\r\nimport {AppContext} from \"../../Context/Context\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport './SearchNote.css';\r\n\r\nconst {Option} = Select;\r\n\r\n/**\r\n * SearchNotes component - allows users to search for notes (rendered on the sidebar)\r\n * @returns {*}\r\n */\r\nexport const SearchNotes = () => {\r\n  const {noteManager} = useContext(AppContext);\r\n  const history = useHistory();\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(null);\r\n\r\n  const filterNotes = (notes, searchText) => {\r\n\treturn [\r\n\t  ...notes\r\n\t\t.filter(note => (\r\n\t\t  note.title.trim().toLowerCase().includes(searchText.trim().toLowerCase()) ||\r\n\t\t  note.type.trim().toLowerCase().includes(searchText.trim().toLowerCase()) ||\r\n\t\t  note.body.trim().toLowerCase().includes(searchText.trim().toLowerCase())\r\n\t\t))\r\n\t]\r\n  };\r\n\r\n  const onSearch = searchText => {\r\n\tif (searchText.trim()) {\r\n\t  const {notes} = noteManager;\r\n\t  setDataSource(\r\n\t\tfilterNotes(notes, searchText)\r\n\t\t  .map(note =>\r\n\t\t\tnote.title.length > 10 ?\r\n\t\t\t  <Option key={note.id} value={note.title}>{`${note.title.slice(0, 10)}...`}</Option> :\r\n\t\t\t  <Option key={note.id} value={note.title}>{note.title}</Option>\r\n\t\t  )\r\n\t  )\r\n\t}\r\n  };\r\n\r\n  const onSelect = (value, option) => {\r\n\tif (option && option.key) {\r\n\t  history.push(`/browse/${option.key}`);\r\n\t}\r\n  };\r\n\r\n  const onChange = value => {\r\n\tsetSearchInput(value);\r\n\tif (!value.trim()) {\r\n\t  history.push(`/browse`);\r\n\t}\r\n  };\r\n\r\n  const onSearchButtonClicked = () => {\r\n\tconst {notes} = noteManager;\r\n\tif (searchInput && notes) {\r\n\t  // when the user clicks the search button, navigate to the first result if at least one\r\n\t  // was found\r\n\t  const filteredNotes = filterNotes(notes, searchInput);\r\n\t  if (filteredNotes.length) {\r\n\t\tonSelect(null, {key: filteredNotes[0].id });\r\n\t  }\r\n\t}\r\n  };\r\n\r\n  return (\r\n\t<AutoComplete\r\n\t  backfill={true}\r\n\t  dataSource={dataSource}\r\n\t  style={{width: '100%'}}\r\n\t  onChange={onChange}\r\n\t  onSelect={onSelect}\r\n\t  onSearch={onSearch}\r\n\t  placeholder=\"Search notes...\"\r\n\t>\r\n\t  <Input\r\n\t\tallowClear\r\n\t\tsuffix={\r\n\t\t  <Icon title=\"Search for a note\"\r\n\t\t\t\tonClick={onSearchButtonClicked}\r\n\t\t\t\ttype=\"search\"\r\n\t\t  />\r\n\t\t}\r\n\t  />\r\n\t</AutoComplete>\r\n  )\r\n};\r\n\r\n","/**\r\n * SideNav.js\r\n */\r\nimport React, {useRef, useState} from 'react';\r\nimport {Icon, Layout, Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {SearchNotes} from \"../Search/SearchNotes\";\r\n\r\nconst {Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\n/**\r\n * SideNav component - the side bar of this application\r\n * @param {\"light\"|\"dark\"} theme\r\n * @returns {*}\r\n */\r\nexport const SideNav = ({theme}) => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const siderRef = useRef(null);\r\n\r\n  const handleSearchWhenCollapsed = e => {\r\n    if (e.key === '1.1') {\r\n      // search was clicked, check whether the sidebar is already collapsed\r\n\t  if (collapsed) {\r\n\t    console.log(siderRef.current);\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  return (\r\n\t<Sider\r\n\t  theme={theme}\r\n\t  collapsible\r\n\t  collapsed={collapsed}\r\n\t  onCollapse={setCollapsed}\r\n\t>\r\n\t  <Menu\r\n\t\tonClick={handleSearchWhenCollapsed}\r\n\t\ttheme={theme}\r\n\t\tmode=\"inline\"\r\n\t\tinlineIndent={10}\r\n\t  >\r\n\t\t<Menu.Item key={0}>\r\n\t\t  <Link to=\"/\">\r\n\t\t\t<Icon type=\"home\"/>\r\n\t\t\t<span>Home</span>\r\n\t\t  </Link>\r\n\t\t</Menu.Item>\r\n\t\t<SubMenu\r\n\t\t  ref={siderRef}\r\n\t\t  popupClassName=\"popup-notes\"\r\n\t\t  key={1}\r\n\t\t  title={\r\n\t\t\t<span>\r\n              <Icon type=\"database\"/>\r\n              <span>Manage notes</span>\r\n            </span>\r\n\t\t  }\r\n\t\t>\r\n\t\t  <Menu.Item\r\n\t\t\tkey={1.1}\r\n\t\t\tstyle={{textAlign: 'center'}}\r\n\t\t  >\r\n\t\t\t<SearchNotes/>\r\n\t\t  </Menu.Item>\r\n\t\t  <Menu.Item key={1.2} style={{textAlign: 'center'}}>\r\n\t\t\t<Link to=\"/browse\">\r\n\t\t\t  <Icon type=\"profile\"/>\r\n\t\t\t  Browse\r\n\t\t\t</Link>\r\n\t\t  </Menu.Item>\r\n\t\t  <Menu.Item key={1.3} style={{textAlign: 'center'}}>\r\n\t\t\t<Link to=\"/add\">\r\n\t\t\t  <Icon type=\"plus\"/>\r\n\t\t\t  Add\r\n\t\t\t</Link>\r\n\t\t  </Menu.Item>\r\n\t\t</SubMenu>\r\n\t  </Menu>\r\n\t</Sider>\r\n  );\r\n};\r\n","/**\r\n * fontFaces.js\r\n */\r\n/**\r\n * \"Enum\" that provides options for font faces\r\n * (NOT CURRENTLY IMPLEMENTED)\r\n * @type {{Muli: 'muli', IndieFlower: 'indie-flower'}}\r\n */\r\nexport const FONT_FACES = {\r\n  Muli: 'muli',\r\n  IndieFlower: 'indie-flower'\r\n};\r\n","/**\r\n * Home.js\r\n */\r\nimport React from 'react';\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AppConsumer} from \"../../Context/Context\";\r\nimport {Icon} from \"antd\";\r\n\r\n/**\r\n * Home component - It's rendered when the / route is accessed\r\n * @returns {*}\r\n */\r\nexport const Home = () => {\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme}) => (\r\n\t\t  <div\r\n\t\t\tstyle={{\r\n\t\t\t  fontSize: '2.1rem',\r\n\t\t\t  color: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t  textAlign: 'center'\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t    fontSize: '2.5rem',\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginBottom: '4rem',\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Welcome\r\n\t\t\t</h2>\r\n\t\t\t<p>This application allows you to add, edit, delete, search and browse notes.</p>\r\n\t\t\t<p>Each note is presented as a card, where:</p>\r\n\t\t\t<ul style={{listStyleType: 'none', fontWeight: 'bold'}}>\r\n\t\t\t  <li>Clicking on the <span><Icon title=\"View note\"\r\n\t\t\t\t\t\t\t\t\t\t\t  type=\"info-circle\"/></span> icon\r\n\t\t\t\tallows you to view details of an individual note on a separate page.\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Edit\" type=\"edit\"/></span> icon\r\n\t\t\t\tallows you to edit the details of a note.\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Delete note\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  type=\"delete\"/></span> icon\r\n\t\t\t\tdeletes a note (you will be prompted to confirm it).\r\n\t\t\t  </li>\r\n\t\t\t  <li style={{marginTop: '2rem'}}>Clicking on the <span><Icon title=\"Note text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  type=\"ellipsis\"/></span> icon\r\n\t\t\t\texpands a note's text.\r\n\t\t\t  </li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p>If you get disconnected whilst using this application, your changes will be kept when\r\n\t\t\t  you're online again.</p>\r\n\t\t\t<p style={{marginBottom: '5rem'}}>The switch toggle on the top right corner allows you\r\n\t\t\t  to toggle dark mode. Give it a\r\n\t\t\t  try!</p>\r\n\t\t\t<p>To get started, click on the chevron on the bottom left corner to navigate through\r\n\t\t\t  the\r\n\t\t\t  windows.\r\n\t\t\t</p>\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * NoteCard.js\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {Card, Col, Collapse, Icon, Modal, Row, Skeleton, Typography} from \"antd\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {confirm} = Modal;\r\nconst {Meta} = Card;\r\nconst {Panel} = Collapse;\r\nconst {Text, Paragraph} = Typography;\r\n\r\n/**\r\n * NoteCard component - renders a card containing details of a single note\r\n * @param {Note} note - The note to be rendered\r\n * @param {Function} onEditNote - calls the onEditNote handler on App.js\r\n * @param {Function} onDeleteNote - calls the onDeleteNote handler on App.js\r\n * @returns {*}\r\n */\r\nexport const NoteCard = ({note, onEditNote, onDeleteNote}) => {\r\n  const {noteManager} = useContext(AppContext);\r\n  const history = useHistory();\r\n\r\n  const [detailsActive, setDetailsActive] = useState(false);\r\n  const [isEditing, setIsEditing] = useState({\r\n\ttitle: false,\r\n\tbody: false,\r\n\ttype: false\r\n  });\r\n\r\n  const [noteDetails, setNoteDetails] = useState({\r\n\ttitle: '',\r\n\tbody: '',\r\n\ttype: ''\r\n  });\r\n\r\n  const onEditingNote = detailName => {\r\n\tsetIsEditing({\r\n\t  ...isEditing,\r\n\t  [detailName]: true\r\n\t});\r\n\r\n\tsetNoteDetails({\r\n\t  ...noteDetails,\r\n\t  [detailName]: note[detailName]\r\n\t});\r\n  };\r\n\r\n  const onChangeDetails = (detailName, detail) => {\r\n\tsetIsEditing({\r\n\t  ...isEditing,\r\n\t  [detailName]: false\r\n\t});\r\n\r\n\tif (note[detailName] !== detail) {\r\n\t  const updatedNote = {\r\n\t\t...note,\r\n\t\t[detailName]: detail\r\n\t  };\r\n\r\n\t  onEditNote(updatedNote, () => {\r\n\t\tconst {title, type, body} = noteManager.findNoteByID(note.id);\r\n\t\tsetNoteDetails({\r\n\t\t  title: title.length > 10 ? `${title.slice(0, 10)}...` : title,\r\n\t\t  type: type.length > 10 ? `${type.slice(0, 10)}...` : type,\r\n\t\t  body\r\n\t\t})\r\n\t  });\r\n\t} else {\r\n\t  setNoteDetails({\r\n\t\t...noteDetails,\r\n\t\t[detailName]: detail.length > 10 ? `${detail.slice(0, 10)}...` : detail\r\n\t  })\r\n\t}\r\n  };\r\n\r\n  const onViewNoteDetails = () => {\r\n\thistory.push(`/browse/${note.id}`);\r\n  };\r\n\r\n  function showConfirmDelete() {\r\n\tconfirm({\r\n\t  title: 'Are you sure that you want to delete this note?',\r\n\t  content: `${note.title} - ${note.type} (${note.createdAt})`,\r\n\t  onOk() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t  onDeleteNote(note.id, () => {\r\n\t\t\tresolve();\r\n\t\t  });\r\n\t\t})\r\n\t\t  .catch(() => console.log('Oops errors!'));\r\n\t  },\r\n\t  onCancel() {\r\n\t  },\r\n\t});\r\n  }\r\n\r\n  useEffect(() => {\r\n\tif (note) {\r\n\t  setNoteDetails({\r\n\t\ttitle: note.title.length > 10 ? `${note.title.slice(0, 10)}...` : note.title,\r\n\t\tbody: note.body,\r\n\t\ttype: note.type.length > 10 ? `${note.type.slice(0, 10)}...` : note.type\r\n\t  })\r\n\t}\r\n  }, [note]);\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading}) => (\r\n\t\t  <Row>\r\n\t\t\t<Col\r\n\t\t\t  xs={{\r\n\t\t\t\tspan: 24\r\n\t\t\t  }}\r\n\t\t\t  md={{\r\n\t\t\t\tspan: 12,\r\n\t\t\t\toffset: 6\r\n\t\t\t  }}\r\n\t\t\t  lg={{\r\n\t\t\t\tspan: 8,\r\n\t\t\t\toffset: 8\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  <Collapse\r\n\t\t\t\tstyle={{marginBottom: '5rem'}}\r\n\t\t\t\tactiveKey={detailsActive ? '1' : ''}\r\n\t\t\t  >\r\n\t\t\t\t<Panel\r\n\t\t\t\t  showArrow={false}\r\n\t\t\t\t  key=\"1\"\r\n\t\t\t\t  header={\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t  actions={[\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  type=\"info-circle\"\r\n\t\t\t\t\t\t  key=\"info\"\r\n\t\t\t\t\t\t  title=\"View note details\"\r\n\t\t\t\t\t\t  onClick={onViewNoteDetails}\r\n\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  onClick={showConfirmDelete}\r\n\t\t\t\t\t\t  type=\"delete\"\r\n\t\t\t\t\t\t  title=\"Delete\"\r\n\t\t\t\t\t\t  key=\"delete\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t,\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t  type=\"ellipsis\"\r\n\t\t\t\t\t\t  key=\"ellipsis\"\r\n\t\t\t\t\t\t  title=\"Expand note text\"\r\n\t\t\t\t\t\t  onClick={() => setDetailsActive(!detailsActive)}/>\r\n\t\t\t\t\t  ]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  <Skeleton loading={loading} avatar active>\r\n\t\t\t\t\t\t<Meta\r\n\t\t\t\t\t\t  title={\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t  editable={{\r\n\t\t\t\t\t\t\t\tonChange: detail => onChangeDetails('title', detail),\r\n\t\t\t\t\t\t\t\tonStart: () => onEditingNote('title'),\r\n\t\t\t\t\t\t\t\tediting: isEditing.title\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t  {noteDetails.title}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t  description={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t  <Text\r\n\t\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\t  onChange: detail => onChangeDetails('type', detail),\r\n\t\t\t\t\t\t\t\t  onStart: () => onEditingNote('type'),\r\n\t\t\t\t\t\t\t\t  editing: isEditing.type\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t{noteDetails.type}\r\n\t\t\t\t\t\t\t  </Text>\r\n\t\t\t\t\t\t\t  <p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t  marginTop: '2rem'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\tCreated at: {note.createdAt}\r\n\t\t\t\t\t\t\t  </p>\r\n\t\t\t\t\t\t\t  {\r\n\t\t\t\t\t\t\t\tnote.updatedAt ?\r\n\t\t\t\t\t\t\t\t  <p>Last updated: {note.updatedAt}</p> :\r\n\t\t\t\t\t\t\t\t  ''\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t  </Skeleton>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t  }\r\n\t\t\t\t>\r\n\t\t\t\t  <Paragraph\r\n\t\t\t\t\teditable={{\r\n\t\t\t\t\t  onChange: detail => onChangeDetails('body', detail),\r\n\t\t\t\t\t  onStart: () => onEditingNote('body'),\r\n\t\t\t\t\t  editing: isEditing.body\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{textAlign: 'justify'}}\r\n\t\t\t\t  >\r\n\t\t\t\t\t{noteDetails.body}\r\n\t\t\t\t  </Paragraph>\r\n\t\t\t\t</Panel>\r\n\t\t\t  </Collapse>\r\n\t\t\t</Col>\r\n\t\t  </Row>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Spinner.js\r\n */\r\nimport React from 'react';\r\nimport {Icon, Spin} from \"antd\";\r\n\r\n/**\r\n * Spinner component - shows a loading spinner\r\n * @returns {*}\r\n */\r\nexport const Spinner = () => (\r\n  <div style={{textAlign: 'center', marginTop: '5rem'}}>\r\n\t<Spin indicator={\r\n\t  <Icon\r\n\t\ttype=\"loading\"\r\n\t\tstyle={{\r\n\t\t  fontSize: '10rem'\r\n\t\t}}\r\n\t  />\r\n\t}\r\n\t/>\r\n  </div>\r\n);\r\n","/**\r\n * BrowseNotes.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {NoteCard} from \"../View/NoteCard\";\r\nimport {Empty, Icon, notification} from \"antd\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * Props for BrowseNotes\r\n * @typedef {Object} BrowseNotesProps\r\n * @property {Function} onEditNote - calls the onEditNote handler from App.js\r\n * @property {Function} onDeleteNote - calls the onDeleteNote handler from App.js\r\n */\r\n/**\r\n *\r\n * @param {BrowseNotesProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const BrowseNotes = props => {\r\n  const {dismissDeletedNoteNotification} = useContext(AppContext);\r\n\r\n  const openDeletedNoteNotification = () => {\r\n\tnotification.open({\r\n\t  message: 'Notification',\r\n\t  description: 'Your note has been successfully deleted',\r\n\t  onClose: dismissDeletedNoteNotification,\r\n\t  duration: 3,\r\n\t  icon: <Icon type=\"check-circle\" style={{color: 'green'}}/>\r\n\t})\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, noteManager, loading, deletedNote}) => (\r\n\t\t  <div style={{textAlign: 'center'}}>\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\tfontSize: '2.5rem',\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\tmarginBottom: '5rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Browse notes\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  deletedNote ? openDeletedNoteNotification() : ''\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\tnoteManager.notes.length ?\r\n\t\t\t\t  noteManager\r\n\t\t\t\t\t.notes\r\n\t\t\t\t\t.sort((note1, note2) => {\r\n\t\t\t\t\t  if (note1.updatedAt && !note2.updatedAt) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t  } else if (!note1.updatedAt && note2.updatedAt) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t  } else if (note1.updatedAt && note2.updatedAt) {\r\n\t\t\t\t\t\treturn moment(note2.updatedAt, 'DD/MM/YYYY hh:mm:ss A').diff(moment(note1.updatedAt, 'DD/MM/YYYY hh:mm:ss A'))\r\n\t\t\t\t\t  } else {\r\n\t\t\t\t\t\treturn moment(note2.createdAt, 'DD/MM/YYYY hh:mm:ss A').diff(moment(note1.createdAt, 'DD/MM/YYYY hh:mm:ss A'))\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(note => (\r\n\t\t\t\t\t  <NoteCard\r\n\t\t\t\t\t\tonDeleteNote={props.onDeleteNote}\r\n\t\t\t\t\t\tonEditNote={props.onEditNote}\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t)) :\r\n\t\t\t\t  <Empty\r\n\t\t\t\t\tdescription={\r\n\t\t\t\t\t  <span\r\n\t\t\t\t\t\tstyle={theme === THEMES.Light ?\r\n\t\t\t\t\t\t  {color: 'rgba(0, 0, 0, .85)'} :\r\n\t\t\t\t\t\t  {color: 'rgba(255, 255, 255, .65)'}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tNo notes to show\r\n\t\t\t\t\t  </span>\r\n\t\t\t\t\t}\r\n\t\t\t\t  />\r\n\t\t\t}\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Type.js\r\n */\r\n/**\r\n * \"Enum\" that contains basic types of notes\r\n * @type {{Todo: \"To do\", Personal: \"Personal\", Work: \"Work\"}}\r\n */\r\nexport const TYPES = {\r\n  Work: 'Work',\r\n  Personal: 'Personal',\r\n  Todo: 'To do'\r\n};\r\n","/**\r\n * Note.js\r\n */\r\nimport {TYPES} from './Type';\r\nimport moment from \"moment\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n/**\r\n * Base model class for a Note\r\n * @class Note\r\n */\r\nexport class Note {\r\n  /**\r\n   * Constructor for Note\r\n   * @param {string} title - Title for the note\r\n   * @param {string} body - Text for the note\r\n   * @param {string} type - Type for the note (default: \"Personal\")\r\n   * @param {Array<string>} tags - Tags for the note (default: empty array, not currently\r\n   * implemented)\r\n   * @param {string} id - Unique ID for the note (default: randomly generated uuid/v4)\r\n   * @param {Date|string} createdAt - Date/time when the note was created (default: now)\r\n   * @param {Date|string} updatedAt - Date/time when the note was last updated (default: null)\r\n   */\r\n  constructor(title, body, type = TYPES.Personal, tags = [], id = uuidv4(), createdAt = moment(moment(), 'DD/MM/YYYY hh:mm:ss A').format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n\tthis.title = title;\r\n\tthis.body = body;\r\n\tthis.type = type;\r\n\tthis.tags = tags;\r\n\tthis.id = id;\r\n\tthis.createdAt = createdAt;\r\n\tthis.updatedAt = updatedAt;\r\n  }\r\n\r\n  /**\r\n   * Checks whether two notes have the same title, body and type\r\n   * @param {Note} anotherNote - note to be compared\r\n   * @returns {boolean}\r\n   */\r\n  hasSameContent(anotherNote) {\r\n\treturn (this.title === anotherNote.title) &&\r\n\t  (this.body === anotherNote.body) &&\r\n\t  (this.type === anotherNote.type);\r\n  }\r\n}\r\n","/**\r\n * AddNoteForm.js\r\n */\r\nimport React from 'react';\r\n\r\nimport {Button, Form, Icon, Input, Select, Tooltip,} from 'antd';\r\nimport {TYPES} from \"../../Model/Type\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Note} from \"../../Model/Note\";\r\n\r\nconst {Option} = Select;\r\n\r\n/**\r\n * This component contains the form that is shown when the /add route is accessed\r\n * It will be wrapped by AddNoteForm (it's a little quirk of Ant Design to make it work\r\n * as intended)\r\n */\r\nclass AddNote extends React.Component {\r\n  state = {\r\n\tconfirmDirty: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n\te.preventDefault();\r\n\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t  if (!err) {\r\n\t\tconst note = new Note(values.title, values.body, values.type);\r\n\t\tthis.props.onAddNote(note);\r\n\t  }\r\n\t});\r\n  };\r\n\r\n  render() {\r\n\tconst {getFieldDecorator} = this.props.form;\r\n\r\n\tconst formItemLayout = {\r\n\t  labelCol: {\r\n\t\txs: {span: 24},\r\n\t\tsm: {span: 4},\r\n\t\tmd: {span: 8}\r\n\t  },\r\n\t  wrapperCol: {\r\n\t\txs: {span: 24},\r\n\t\tsm: {span: 16},\r\n\t\tmd: {span: 8}\r\n\t  },\r\n\t};\r\n\tconst tailFormItemLayout = {\r\n\t  wrapperCol: {\r\n\t\txs: {\r\n\t\t  span: 24\r\n\t\t}\r\n\t  },\r\n\t};\r\n\r\n\treturn (\r\n\t  <AppConsumer>\r\n\t\t{({theme}) => (\r\n\t\t  <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tTitle\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t  hasFeedback\r\n\t\t\t>\r\n\t\t\t  {getFieldDecorator('title', {\r\n\t\t\t\trules: [\r\n\t\t\t\t  {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: 'Please enter a title',\r\n\t\t\t\t  },\r\n\t\t\t\t],\r\n\t\t\t  })(<Input/>)}\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tText\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t  hasFeedback\r\n\t\t\t>\r\n\t\t\t  {getFieldDecorator('body', {\r\n\t\t\t\trules: [\r\n\t\t\t\t  {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: 'Please enter some text for your note',\r\n\t\t\t\t  }\r\n\t\t\t\t],\r\n\t\t\t  })(<Input.TextArea allowClear={true}/>)}\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t  label={\r\n\t\t\t\t<span style={\r\n\t\t\t\t  theme === THEMES.Light ?\r\n\t\t\t\t\t{color: 'rgba(0, 0, 0, 0.85)'} :\r\n\t\t\t\t\t{color: 'rgba(255, 255, 255, 0.65)'}\r\n\t\t\t\t}>\r\n\t\t\t  \t\tType <span>\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t  title={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t  <p>Basic types are provided</p>\r\n\t\t\t\t\t\t  <p>You may change it later</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t  }>\r\n\t\t\t\t\t<Icon type=\"question-circle\"/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t  </span>\r\n\t\t    \t</span>\r\n\t\t\t  }\r\n\t\t\t>\r\n\t\t\t  {\r\n\t\t\t\tgetFieldDecorator('Type', {\r\n\t\t\t\t  initialValue: TYPES.Personal\r\n\t\t\t\t})(\r\n\t\t\t\t  <Select>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  Object.values(TYPES).map((type, index) => (\r\n\t\t\t\t\t\t<Option key={index} value={type}>{type}</Option>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t}\r\n\t\t\t\t  </Select>\r\n\t\t\t\t)\r\n\t\t\t  }\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item {...tailFormItemLayout} style={{textAlign: 'center', marginTop: '5rem'}}>\r\n\t\t\t  <Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\tAdd note\r\n\t\t\t  </Button>\r\n\t\t\t</Form.Item>\r\n\t\t  </Form>\r\n\t\t)}\r\n\t  </AppConsumer>\r\n\t);\r\n  }\r\n}\r\n\r\nAddNote.contextType = AppContext;\r\nconst AddNoteForm = Form.create({name: 'addNote'})(AddNote);\r\n\r\nexport {AddNoteForm}\r\n","/**\r\n * NoteManager.js\r\n */\r\nimport moment from \"moment\";\r\n\r\nlet db;\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  db = require('../Firebase/Firebase.dev').db;\r\n} else {\r\n  db = require('../Firebase/Firebase.prod').db;\r\n}\r\n\r\n/**\r\n * Manages all notes present in the application\r\n * @class NoteManager\r\n */\r\nexport class NoteManager {\r\n  /**\r\n   * Constructor for NoteManager\r\n   * @param {Array<Note>} notes - All notes in the application (default: empty array)\r\n   */\r\n  constructor(notes = []) {\r\n\tthis.notes = notes;\r\n  }\r\n\r\n  /**\r\n   * Finds the index of a note in {@link notes} by its ID\r\n   * @param {string} noteID - The ID of the note to be searched\r\n   * @returns {number}\r\n   */\r\n  findNoteIndexByID(noteID) {\r\n\treturn this.notes.findIndex(note => note.id === noteID);\r\n  }\r\n\r\n  /**\r\n   * Finds all notes in {@link notes} whose title matches noteTitle\r\n   * @param {string} noteTitle - Title to be searched\r\n   * @returns {Note[]|[]}\r\n   */\r\n  findNotesByTitle(noteTitle) {\r\n\treturn this.notes.filter(note => note.title.trim().toLowerCase().includes(noteTitle.trim().toLowerCase()));\r\n  }\r\n\r\n  /**\r\n   * Finds a note in {@link notes} by its ID\r\n   * @param {string} noteID - The ID of the note to be searched\r\n   * @returns {Note|undefined}\r\n   */\r\n  findNoteByID(noteID) {\r\n\treturn this.notes.find(note => note.id === noteID);\r\n  }\r\n\r\n  /**\r\n   * Adds a note to {@link notes}\r\n   * @param {Note} note - note to be added\r\n   * @param {boolean} updateRemote - if true, also adds a note to the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully added to the remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to add a note to the\r\n   * remote database (default: null)\r\n   */\r\n  addNote(note, updateRemote = true, onSuccess = null, onError = null) {\r\n\tthis.notes.push(note);\r\n\r\n\tif (updateRemote) {\r\n\t  db\r\n\t\t.collection('notes')\r\n\t\t.doc(note.id)\r\n\t\t.set({...note})\r\n\t\t.then(onSuccess)\r\n\t\t.catch(err => onError(err))\r\n\t}\r\n  };\r\n\r\n  /**\r\n   * Edits a note in {@link notes}\r\n   * @param {Note} updatedNote - updated note, with the same ID of the original one\r\n   * @param {boolean} updateRemote - if true, also edits the note in the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully edited in the remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to edit the note\r\n   * in the remote database (default: null)\r\n   */\r\n  editNote(updatedNote, updateRemote = true, onSuccess = null, onError = null) {\r\n\tif (this.findNoteByID(updatedNote.id)) {\r\n\t  let noteToBeUpdated = this.findNoteByID(updatedNote.id);\r\n\t  noteToBeUpdated = updatedNote;\r\n\t  noteToBeUpdated.updatedAt = moment(moment(), 'DD/MM/YYYY hh:mm:ss A').format('DD/MM/YYYY hh:mm:ss A');\r\n\r\n\t  this.notes[this.findNoteIndexByID(updatedNote.id)] = noteToBeUpdated;\r\n\r\n\t  if (updateRemote) {\r\n\t\tdb\r\n\t\t  .collection('notes')\r\n\t\t  .doc(updatedNote.id)\r\n\t\t  .update({...updatedNote})\r\n\t\t  .then(onSuccess)\r\n\t\t  .catch(err => onError(err));\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * Deletes a note in {@link notes}\r\n   * @param {string} noteID - The ID of the note to be deleted\r\n   * @param {boolean} updateRemote - if true, also deletes the note from the remote database (default: true)\r\n   * @param {Function|null} onSuccess - called after the note is successfully deleted from the\r\n   * remote\r\n   * database (default: null)\r\n   * @param {Function|null} onError - called when an error occurs while trying to delete the note\r\n   * from the remote database (default: null)\r\n   */\r\n  deleteNoteByID(noteID, updateRemote = true, onSuccess = null, onError = null) {\r\n\tif (this.findNoteByID(noteID)) {\r\n\t  this.notes = this.notes.filter(note => note.id !== noteID);\r\n\r\n\t  if (updateRemote) {\r\n\t\tdb\r\n\t\t  .collection('notes')\r\n\t\t  .doc(noteID)\r\n\t\t  .delete()\r\n\t\t  .then(onSuccess)\r\n\t\t  .catch(err => onError(err));\r\n\t  }\r\n\t}\r\n  }\r\n}\r\n","/**\r\n * AddNote.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {Icon, notification} from \"antd\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {AddNoteForm} from \"./AddNoteForm\";\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\n\r\n/**\r\n * Props for AddNote\r\n * @typedef {Object} AddNoteProps\r\n * @property {Function} onAddNote - calls the onAddNote handler on App.js\r\n */\r\n/**\r\n * AddNote component - For the /add route\r\n * @param {AddNoteProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddNote = props => {\r\n  const {dismissAddedNoteNotification} = useContext(AppContext);\r\n\r\n  const openNoteAddedNotification = () => {\r\n\tnotification.open({\r\n\t  message: 'Notification',\r\n\t  description: 'Your note has been successfully added',\r\n\t  icon: <Icon type=\"check-circle\" style={{color: 'green'}}/>,\r\n\t  duration: 3,\r\n\t  onClose: dismissAddedNoteNotification\r\n\t})\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading, addedNote}) => (\r\n\t\t  <>\r\n\t\t\t{\r\n\t\t\t  addedNote ?\r\n\t\t\t\t(\r\n\t\t\t\t  openNoteAddedNotification()\r\n\t\t\t\t) : ''\r\n\t\t\t}\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t    fontSize: '2.5rem',\r\n\t\t\t\tcolor: theme === THEMES.Light ?\r\n\t\t\t\t\t`rgba(0, 0, 0, 0.65)` :\r\n\t\t\t\t\t`rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginBottom: '5rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  Add a new note\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\t<AddNoteForm onAddNote={props.onAddNote}/>\r\n\t\t\t}\r\n\t\t  </>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * NoteFound.js\r\n */\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\n\r\n/**\r\n * NotFound component - To handle unknown routes\r\n * @returns {*}\r\n */\r\nexport const NotFound = () => (\r\n  <>\r\n\t<h2>Resource not found</h2>\r\n\t<Button type=\"link\">\r\n\t  <Link to={`/`}>Home</Link>\r\n\t</Button>\r\n  </>\r\n);\r\n","/**\r\n * App.js\r\n */\r\nimport React from 'react';\r\nimport {Col, Icon, Layout, notification, Row, Switch as ToggleSwitch} from 'antd';\r\nimport {SideNav} from \"../Nav/SideNav\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {FONT_FACES} from \"../../Customisation/fontFaces\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Home} from \"../Home/Home\";\r\nimport {BrowseNotes} from \"../Browse/BrowseNotes\";\r\nimport {AddNote} from \"../Add/AddNote\";\r\nimport {NotFound} from \"../404/NotFound\";\r\nimport {NoteManager} from \"../../Model/NoteManager\";\r\nimport {AppProvider} from \"../../Context/Context\";\r\nimport {Note} from \"../../Model/Note\";\r\nimport {ViewNote} from \"../View/ViewNote\";\r\n\r\nlet db;\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  db = require('../../Firebase/Firebase.dev').db;\r\n} else {\r\n  db = require('../../Firebase/Firebase.prod').db;\r\n}\r\n\r\nconst {Content, Footer, Header} = Layout;\r\n\r\n/**\r\n * App component - manages the various routes of this application\r\n */\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t  noteManager: new NoteManager(),\r\n\t  fontFace: FONT_FACES.Muli,\r\n\t  theme: THEMES.Light,\r\n\t  windowSize: '',\r\n\t  loading: navigator.onLine,\r\n\t  addedNote: false,\r\n\t  deletedNote: false,\r\n\t  dismissAddedNoteNotification: this.dismissAddedNoteNotification,\r\n\t  dismissDeletedNoteNotification: this.dismissDeletedNoteNotification\r\n\t};\r\n\r\n\t/**\r\n\t * Dismisses the notification shown after a note is added\r\n\t * @param {Function|null} callback - Called after the notification is dismissed (default: null)\r\n\t */\r\n\tthis.dismissAddedNoteNotification = (callback = null) => {\r\n\t  this.setState({\r\n\t\taddedNote: false\r\n\t  }, callback)\r\n\t};\r\n\r\n\t/**\r\n\t * Dismisses the notification shown after a note is deleted\r\n\t * @param {Function|null} callback - Called after the notification is dismissed (default: null)\r\n\t */\r\n\tthis.dismissDeletedNoteNotification = (callback = null) => {\r\n\t  this.setState({\r\n\t\tdeletedNote: false\r\n\t  }, callback)\r\n\t};\r\n  }\r\n\r\n  /**\r\n   * Changes the font face of the application\r\n   * (NOT CURRENTLY IMPLEMENTED)\r\n   */\r\n  onFontFaceChange = () => {\r\n\tthis.setState(prevState => ({\r\n\t  fontFace: prevState.fontFace === FONT_FACES.Muli ? FONT_FACES.IndieFlower : FONT_FACES.Muli\r\n\t}))\r\n  };\r\n\r\n  /**\r\n   * Changes the theme of the application\r\n   */\r\n  onThemeChange = () => {\r\n\tthis.setState(prevState => ({\r\n\t  theme: prevState.theme === THEMES.Light ? THEMES.Dark : THEMES.Light\r\n\t}), () => {\r\n\t  // remember settings\r\n\t  localStorage.setItem('theme', JSON.stringify(this.state.theme));\r\n\t})\r\n  };\r\n\r\n  /**\r\n   * Detects the width of the window for styling purposes\r\n   * (This is a quick hack for inline styles, to override the styles injected by Ant Design)\r\n   */\r\n  setUpWindowSize = () => {\r\n\tif (window.innerWidth < 376) {\r\n\t  this.setState({\r\n\t\twindowSize: 'xxs'\r\n\t  })\r\n\t} else if (window.innerWidth < 576) {\r\n\t  this.setState({windowSize: 'xs'});\r\n\t} else {\r\n\t  this.setState({windowSize: ''})\r\n\t}\r\n  };\r\n\r\n  /**\r\n   * Adds a note (handled by {@link noteManager})\r\n   * @param {Note} note - note to be added\r\n   * @param {Function|null} callback - called after the note is added (default: null)\r\n   */\r\n  onAddNote = (note, callback = null) => {\r\n\tconst {noteManager} = this.state;\r\n\tthis.setState({\r\n\t  loading: true\r\n\t}, () => {\r\n\t  // if user if offline, stop loading after .5 sec\r\n\t  if (!navigator.onLine) {\r\n\t\tsetTimeout(() => {\r\n\t\t  this.setState({\r\n\t\t\tloading: false,\r\n\t\t\taddedNote: true\r\n\t\t  }, () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t  this.dismissAddedNoteNotification();\r\n\t\t\t}, 3000)\r\n\t\t  })\r\n\t\t}, 500);\r\n\t  }\r\n\t  noteManager.addNote(note, true, () => {\r\n\t\tthis.setState({\r\n\t\t  noteManager,\r\n\t\t  loading: false,\r\n\t\t  addedNote: true\r\n\t\t}, () => {\r\n\t\t  setTimeout(() => {\r\n\t\t\tthis.dismissAddedNoteNotification(callback);\r\n\t\t  }, 3000)\r\n\t\t})\r\n\t  }, err => {\r\n\t\tconsole.error(err);\r\n\t  })\r\n\t})\r\n  };\r\n\r\n  /**\r\n   * Edits a note (handled by {@link noteManager})\r\n   * @param {Note} updatedNote - note to be edited\r\n   * @param {Function|null} callback - called after the note is edited (default: null)\r\n   */\r\n  onEditNote = (updatedNote, callback = null) => {\r\n\tthis.setState(prevState => {\r\n\t  const {noteManager} = prevState;\r\n\t  noteManager.editNote(updatedNote);\r\n\r\n\t  return ({noteManager})\r\n\t}, callback)\r\n  };\r\n\r\n  onDeleteNote = (noteID, callback) => {\r\n\tthis.setState(prevState => {\r\n\t  const {noteManager} = prevState;\r\n\t  noteManager.deleteNoteByID(noteID);\r\n\r\n\t  return ({\r\n\t\tnoteManager,\r\n\t\tdeletedNote: true\r\n\t  })\r\n\t}, () => {\r\n\t  callback();\r\n\t  setTimeout(() => {\r\n\t\tthis.dismissDeletedNoteNotification();\r\n\t  }, 3000)\r\n\t})\r\n  };\r\n\r\n  componentDidMount() {\r\n\tif (!navigator.onLine) {\r\n\t  this.openNetworkNotification(\r\n\t\t'You seem to be offline',\r\n\t\t`Don't worry though, your changes will be synchronised when you go back online`\r\n\t  );\r\n\t}\r\n\r\n\twindow.addEventListener('offline', () => {\r\n\t  if (!navigator.onLine) {\r\n\t\tthis.openNetworkNotification(\r\n\t\t  'You seem to be offline',\r\n\t\t  `Don't worry though, your changes will be synchronised when you go back online`\r\n\t\t);\r\n\t  }\r\n\t});\r\n\r\n\twindow.addEventListener('online', () => {\r\n\t  if (navigator.onLine) {\r\n\t\tthis.openNetworkNotification(\r\n\t\t  'Back online! 🙂'\r\n\t\t)\r\n\t  }\r\n\t});\r\n\r\n\twindow.addEventListener('resize', this.setUpWindowSize);\r\n\twindow.addEventListener('orientationChange', this.setUpWindowSize);\r\n\tlet theme;\r\n\r\n\t// get user settings, if any has been saved\r\n\tconst themeJSON = localStorage.getItem('theme');\r\n\tif (themeJSON) {\r\n\t  theme = JSON.parse(themeJSON);\r\n\t  this.setState({theme})\r\n\t}\r\n\t// fetch notes from remote here\r\n\tdb\r\n\t  .collection('notes')\r\n\t  .get()\r\n\t  .then(snap => {\r\n\t\tthis.setState(prevState => {\r\n\t\t  const {noteManager} = prevState;\r\n\t\t  snap.forEach(doc => {\r\n\t\t\tconst noteData = doc.data();\r\n\t\t\tconst note = new Note(noteData.title, noteData.body, noteData.type, null, noteData.id, noteData.createdAt, noteData.updatedAt);\r\n\t\t\tnoteManager.addNote(note, false);\r\n\t\t  });\r\n\t\t  return ({\r\n\t\t\tnoteManager,\r\n\t\t\tloading: false\r\n\t\t  })\r\n\t\t})\r\n\t  })\r\n\t  .catch(err => {\r\n\t\tthis.setState({\r\n\t\t  loading: false\r\n\t\t})\r\n\t  })\r\n  }\r\n\r\n  /**\r\n   * Shows notifications related to network changes (online/offline)\r\n   * @param {string} message - Title of the notification\r\n   * @param {string|null} description - Body text of the notification (default: null)\r\n   */\r\n  openNetworkNotification = (message, description = null) => {\r\n\tnotification.open({\r\n\t  message,\r\n\t  description\r\n\t})\r\n  };\r\n\r\n  render() {\r\n\treturn (\r\n\t  <AppProvider value={this.state}>\r\n\t\t<Layout>\r\n\t\t  <Header\r\n\t\t\tstyle={{\r\n\t\t\t  padding: 0,\r\n\t\t\t  backgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`\r\n\t\t\t}}>\r\n\t\t\t<Row>\r\n\t\t\t  <Col span={8} offset={8}>\r\n\t\t\t\t<h1\r\n\t\t\t\t  style={{\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tfontSize: '2.5rem',\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tcolor: this.state.theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`\r\n\t\t\t\t  }}>\r\n\t\t\t\t  Note taking app\r\n\t\t\t\t</h1>\r\n\t\t\t  </Col>\r\n\t\t\t  <Col\r\n\t\t\t\tsm={{\r\n\t\t\t\t  span: 2,\r\n\t\t\t\t  offset: 6\r\n\t\t\t\t}}\r\n\t\t\t\txs={{\r\n\t\t\t\t  span: 4,\r\n\t\t\t\t  offset: 4\r\n\t\t\t\t}}\r\n\t\t\t  >\r\n\t\t\t\t<ToggleSwitch\r\n\t\t\t\t  onChange={this.onThemeChange}\r\n\t\t\t\t  checked={this.state.theme === THEMES.Light}\r\n\t\t\t\t  checkedChildren={<Icon type=\"bulb\"/>}\r\n\t\t\t\t  unCheckedChildren={<Icon type=\"bulb\"/>}\r\n\t\t\t\t/>\r\n\t\t\t  </Col>\r\n\t\t\t</Row>\r\n\t\t  </Header>\r\n\t\t  <Layout style={{\r\n\t\t\tminHeight: '100vh',\r\n\t\t\tbackgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`\r\n\t\t  }}>\r\n\t\t\t<SideNav theme={this.state.theme}/>\r\n\t\t\t<Content style={{margin: '0 1rem'}}>\r\n\t\t\t  <div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t  padding: '2rem'\r\n\t\t\t\t}}\r\n\t\t\t  >\r\n\t\t\t\t<Switch>\r\n\t\t\t\t  <Route path=\"/\" exact\r\n\t\t\t\t\t\t render={props => <Home {...props} />}/>\r\n\t\t\t\t  <Route exact path=\"/browse\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <BrowseNotes\r\n\t\t\t\t\t\t\t onDeleteNote={this.onDeleteNote}\r\n\t\t\t\t\t\t\t onEditNote={this.onEditNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />}\r\n\t\t\t\t  />\r\n\r\n\t\t\t\t  <Route path=\"/browse/:noteID\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <ViewNote\r\n\t\t\t\t\t\t\t onEditNote={this.onEditNote}\r\n\t\t\t\t\t\t\t onDeleteNote={this.onDeleteNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />\r\n\t\t\t\t\t\t }\r\n\t\t\t\t  />\r\n\r\n\t\t\t\t  <Route path=\"/add\"\r\n\t\t\t\t\t\t render={props =>\r\n\t\t\t\t\t\t   <AddNote\r\n\t\t\t\t\t\t\t onAddNote={this.onAddNote}\r\n\t\t\t\t\t\t\t {...props}\r\n\t\t\t\t\t\t   />\r\n\t\t\t\t\t\t }\r\n\t\t\t\t  />\r\n\t\t\t\t  <Route path=\"*\" render={props => <NotFound {...props} />}/>\r\n\t\t\t\t</Switch>\r\n\t\t\t  </div>\r\n\t\t\t</Content>\r\n\t\t  </Layout>\r\n\r\n\t\t  <Footer\r\n\t\t\tstyle={{\r\n\t\t\t  textAlign: ((this.state.windowSize === 'xs') || (this.state.windowSize === 'xxs')) ? 'right' : 'center',\r\n\t\t\t  backgroundColor: this.state.theme === THEMES.Light ? `rgba(255, 255, 255, 0.65)` : `#001529`,\r\n\t\t\t  color: this.state.theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t  fontSize: '2rem'\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\tCopyright &copy; 2019 Diego C.\r\n\t\t  </Footer>\r\n\t\t</Layout>\r\n\t  </AppProvider>\r\n\t)\r\n  }\r\n}\r\n","/**\r\n * ViewNote.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {AppConsumer, AppContext} from \"../../Context/Context\";\r\nimport {THEMES} from \"../../Customisation/themes\";\r\nimport {Spinner} from \"../Spinner/Spinner\";\r\nimport {NoteCard} from \"./NoteCard\";\r\nimport {Button, Empty} from \"antd\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\n/**\r\n * Props for ViewNote\r\n * @typedef {Object} ViewNoteProps\r\n * @property {Function} onEditNote - calls the onEditNote handler on App.js\r\n * @property {Function} onDeleteNote - calls the onDeleteNote handler on App.js\r\n */\r\n/**\r\n * ViewNote component - It's rendered when the /browse/:noteID route is accessed\r\n * @param {ViewNoteProps} props\r\n * @returns {*}\r\n */\r\nexport const ViewNote = props => {\r\n  const history = useHistory();\r\n  const {noteID} = useParams();\r\n  const {noteManager} = useContext(AppContext);\r\n  const note = noteManager.findNoteByID(noteID);\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({theme, loading}) => (\r\n\t\t  <div style={{textAlign: 'center'}}>\r\n\t\t\t<h2\r\n\t\t\t  style={{\r\n\t\t\t\tfontSize: '2.5rem',\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tcolor: theme === THEMES.Light ? `rgba(0, 0, 0, 0.65)` : `rgba(255, 255, 255, 0.65)`,\r\n\t\t\t\tmarginBottom: '4rem'\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  View note: {note ? note.title : ''}\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t  loading ?\r\n\t\t\t\t<Spinner/> :\r\n\t\t\t\tnote ?\r\n\t\t\t\t  <NoteCard\r\n\t\t\t\t\tonEditNote={props.onEditNote}\r\n\t\t\t\t\tonDeleteNote={props.onDeleteNote}\r\n\t\t\t\t\tnote={note}\r\n\t\t\t\t  /> :\r\n\t\t\t\t  <Empty\r\n\t\t\t\t\tdescription={\r\n\t\t\t\t\t  <span\r\n\t\t\t\t\t\tstyle={theme === THEMES.Light ?\r\n\t\t\t\t\t\t  {color: 'rgba(0, 0, 0, .85)'} :\r\n\t\t\t\t\t\t  {color: 'rgba(255, 255, 255, .65)'}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tNote not found\r\n\t\t\t\t\t  </span>\r\n\t\t\t\t\t}\r\n\t\t\t\t  />\r\n\t\t\t}\r\n\t\t\t<Button\r\n\t\t\t  style={{marginTop: '5rem'}}\r\n\t\t\t  type=\"primary\"\r\n\t\t\t  onClick={() => history.push(`/browse`)}\r\n\t\t\t>\r\n\t\t\t  Browse notes\r\n\t\t\t</Button>\r\n\t\t  </div>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * index.js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {App} from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\n\r\n/**\r\n * Entry point of the application, renders <App /> wrapped by BrowserRouter\r\n */\r\nReactDOM.render(\r\n  <Router basename=\"/note-taking-app\">\r\n\t<App/>\r\n  </Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif (process.env.NODE_ENV === 'development') {\r\n  serviceWorker.unregister();\r\n} else {\r\n  serviceWorker.register();\r\n}\r\n"],"sourceRoot":""}